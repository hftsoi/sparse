-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity model_test_sparse_input is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_in : IN STD_LOGIC_VECTOR (1199 downto 0);
    x_in_ap_vld : IN STD_LOGIC;
    ap_return_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (2 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ap_return_8 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ap_return_9 : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_return_10 : OUT STD_LOGIC_VECTOR (3 downto 0);
    ap_return_11 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_12 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_13 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_14 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_15 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_16 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_17 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_18 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_19 : OUT STD_LOGIC_VECTOR (11 downto 0);
    ap_return_20 : OUT STD_LOGIC_VECTOR (11 downto 0) );
end;


architecture behav of model_test_sparse_input is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101100";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal x_in_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln60_fu_80_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln60_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_90_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_100_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_110_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_120_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_130_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_140_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_150_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_160_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_170_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_180_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_2_fu_206_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln83_1_fu_198_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln83_4_fu_222_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln83_6_fu_238_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln83_8_fu_254_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln83_11_fu_278_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln83_13_fu_294_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln83_15_fu_310_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln83_17_fu_326_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln83_fu_190_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_3_fu_214_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_5_fu_230_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_7_fu_246_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_9_fu_262_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_10_fu_270_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_12_fu_286_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_14_fu_302_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_16_fu_318_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln83_18_fu_334_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_return_4_preg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_return_5_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_return_6_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_return_7_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_return_8_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_return_9_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_return_10_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_return_11_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_12_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_13_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_14_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_15_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_16_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_17_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_18_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_19_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_return_20_preg : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv2_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_0_preg <= select_ln83_2_fu_206_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_10_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_10_preg(0) <= '0';
                ap_return_10_preg(1) <= '0';
                ap_return_10_preg(3) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_10_preg(1 downto 0) <= select_ln83_17_fu_326_p3(1 downto 0);                    ap_return_10_preg(3) <= select_ln83_17_fu_326_p3(3);
                end if; 
            end if;
        end if;
    end process;


    ap_return_11_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_11_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_11_preg <= select_ln83_fu_190_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_12_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_12_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_12_preg <= select_ln83_3_fu_214_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_13_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_13_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_13_preg <= select_ln83_5_fu_230_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_14_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_14_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_14_preg <= select_ln83_7_fu_246_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_15_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_15_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_15_preg <= select_ln83_9_fu_262_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_16_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_16_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_16_preg <= select_ln83_10_fu_270_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_17_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_17_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_17_preg <= select_ln83_12_fu_286_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_18_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_18_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_18_preg <= select_ln83_14_fu_302_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_19_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_19_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_19_preg <= select_ln83_16_fu_318_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv2_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_1_preg <= select_ln83_1_fu_198_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_20_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_20_preg <= ap_const_lv12_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_20_preg <= select_ln83_18_fu_334_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv3_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_2_preg <= select_ln83_4_fu_222_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg(0) <= '0';
                ap_return_3_preg(2) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_3_preg(0) <= select_ln83_6_fu_238_p3(0);                    ap_return_3_preg(2) <= select_ln83_6_fu_238_p3(2);
                end if; 
            end if;
        end if;
    end process;


    ap_return_4_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_4_preg <= ap_const_lv3_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_4_preg <= select_ln83_8_fu_254_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_5_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_5_preg <= ap_const_lv2_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_5_preg <= select_ln83_1_fu_198_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_6_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_6_preg <= ap_const_lv4_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_6_preg <= select_ln83_11_fu_278_p3;
                end if; 
            end if;
        end if;
    end process;


    ap_return_7_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_7_preg(0) <= '0';
                ap_return_7_preg(3) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_7_preg(0) <= select_ln83_13_fu_294_p3(0);                    ap_return_7_preg(3) <= select_ln83_13_fu_294_p3(3);
                end if; 
            end if;
        end if;
    end process;


    ap_return_8_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_8_preg(0) <= '0';
                ap_return_8_preg(1) <= '0';
                ap_return_8_preg(3) <= '0';
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                                        ap_return_8_preg(1 downto 0) <= select_ln83_15_fu_310_p3(1 downto 0);                    ap_return_8_preg(3) <= select_ln83_15_fu_310_p3(3);
                end if; 
            end if;
        end if;
    end process;


    ap_return_9_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_9_preg <= ap_const_lv2_0;
            else
                if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_return_9_preg <= select_ln83_2_fu_206_p3;
                end if; 
            end if;
        end if;
    end process;

    ap_return_3_preg(1) <= '0';
    ap_return_7_preg(2 downto 1) <= "00";
    ap_return_8_preg(2) <= '0';
    ap_return_10_preg(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, x_in_ap_vld)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, x_in_ap_vld)
    begin
        if (((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, x_in_ap_vld)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_2_fu_206_p3, ap_return_0_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_0 <= select_ln83_2_fu_206_p3;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_1_fu_198_p3, ap_return_1_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_1 <= select_ln83_1_fu_198_p3;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_10_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_17_fu_326_p3, ap_return_10_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_10 <= select_ln83_17_fu_326_p3;
        else 
            ap_return_10 <= ap_return_10_preg;
        end if; 
    end process;


    ap_return_11_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_fu_190_p3, ap_return_11_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_11 <= select_ln83_fu_190_p3;
        else 
            ap_return_11 <= ap_return_11_preg;
        end if; 
    end process;


    ap_return_12_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_3_fu_214_p3, ap_return_12_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_12 <= select_ln83_3_fu_214_p3;
        else 
            ap_return_12 <= ap_return_12_preg;
        end if; 
    end process;


    ap_return_13_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_5_fu_230_p3, ap_return_13_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_13 <= select_ln83_5_fu_230_p3;
        else 
            ap_return_13 <= ap_return_13_preg;
        end if; 
    end process;


    ap_return_14_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_7_fu_246_p3, ap_return_14_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_14 <= select_ln83_7_fu_246_p3;
        else 
            ap_return_14 <= ap_return_14_preg;
        end if; 
    end process;


    ap_return_15_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_9_fu_262_p3, ap_return_15_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_15 <= select_ln83_9_fu_262_p3;
        else 
            ap_return_15 <= ap_return_15_preg;
        end if; 
    end process;


    ap_return_16_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_10_fu_270_p3, ap_return_16_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_16 <= select_ln83_10_fu_270_p3;
        else 
            ap_return_16 <= ap_return_16_preg;
        end if; 
    end process;


    ap_return_17_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_12_fu_286_p3, ap_return_17_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_17 <= select_ln83_12_fu_286_p3;
        else 
            ap_return_17 <= ap_return_17_preg;
        end if; 
    end process;


    ap_return_18_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_14_fu_302_p3, ap_return_18_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_18 <= select_ln83_14_fu_302_p3;
        else 
            ap_return_18 <= ap_return_18_preg;
        end if; 
    end process;


    ap_return_19_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_16_fu_318_p3, ap_return_19_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_19 <= select_ln83_16_fu_318_p3;
        else 
            ap_return_19 <= ap_return_19_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_4_fu_222_p3, ap_return_2_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_2 <= select_ln83_4_fu_222_p3;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_20_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_18_fu_334_p3, ap_return_20_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_20 <= select_ln83_18_fu_334_p3;
        else 
            ap_return_20 <= ap_return_20_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_6_fu_238_p3, ap_return_3_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_3 <= select_ln83_6_fu_238_p3;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;


    ap_return_4_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_8_fu_254_p3, ap_return_4_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_4 <= select_ln83_8_fu_254_p3;
        else 
            ap_return_4 <= ap_return_4_preg;
        end if; 
    end process;


    ap_return_5_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_1_fu_198_p3, ap_return_5_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_5 <= select_ln83_1_fu_198_p3;
        else 
            ap_return_5 <= ap_return_5_preg;
        end if; 
    end process;


    ap_return_6_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_11_fu_278_p3, ap_return_6_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_6 <= select_ln83_11_fu_278_p3;
        else 
            ap_return_6 <= ap_return_6_preg;
        end if; 
    end process;


    ap_return_7_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_13_fu_294_p3, ap_return_7_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_7 <= select_ln83_13_fu_294_p3;
        else 
            ap_return_7 <= ap_return_7_preg;
        end if; 
    end process;


    ap_return_8_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_15_fu_310_p3, ap_return_8_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_8 <= select_ln83_15_fu_310_p3;
        else 
            ap_return_8 <= ap_return_8_preg;
        end if; 
    end process;


    ap_return_9_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld, select_ln83_2_fu_206_p3, ap_return_9_preg)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (x_in_ap_vld = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_return_9 <= select_ln83_2_fu_206_p3;
        else 
            ap_return_9 <= ap_return_9_preg;
        end if; 
    end process;

    icmp_ln60_fu_84_p2 <= "1" when (trunc_ln60_fu_80_p1 = ap_const_lv12_0) else "0";
    select_ln83_10_fu_270_p3 <= 
        tmp_5_fu_140_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_4_fu_130_p4;
    select_ln83_11_fu_278_p3 <= 
        ap_const_lv4_8 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv4_7;
    select_ln83_12_fu_286_p3 <= 
        tmp_6_fu_150_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_5_fu_140_p4;
    select_ln83_13_fu_294_p3 <= 
        ap_const_lv4_9 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln83_14_fu_302_p3 <= 
        tmp_7_fu_160_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_6_fu_150_p4;
    select_ln83_15_fu_310_p3 <= 
        ap_const_lv4_A when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv4_9;
    select_ln83_16_fu_318_p3 <= 
        tmp_8_fu_170_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_7_fu_160_p4;
    select_ln83_17_fu_326_p3 <= 
        ap_const_lv4_1 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv4_A;
    select_ln83_18_fu_334_p3 <= 
        tmp_9_fu_180_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_8_fu_170_p4;
    select_ln83_1_fu_198_p3 <= 
        ap_const_lv2_3 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln83_2_fu_206_p3 <= 
        ap_const_lv2_2 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv2_1;
    select_ln83_3_fu_214_p3 <= 
        tmp_1_fu_100_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_s_fu_90_p4;
    select_ln83_4_fu_222_p3 <= 
        ap_const_lv3_4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln83_5_fu_230_p3 <= 
        tmp_2_fu_110_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_1_fu_100_p4;
    select_ln83_6_fu_238_p3 <= 
        ap_const_lv3_5 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln83_7_fu_246_p3 <= 
        tmp_3_fu_120_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_2_fu_110_p4;
    select_ln83_8_fu_254_p3 <= 
        ap_const_lv3_6 when (icmp_ln60_fu_84_p2(0) = '1') else 
        ap_const_lv3_5;
    select_ln83_9_fu_262_p3 <= 
        tmp_4_fu_130_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        tmp_3_fu_120_p4;
    select_ln83_fu_190_p3 <= 
        tmp_s_fu_90_p4 when (icmp_ln60_fu_84_p2(0) = '1') else 
        trunc_ln60_fu_80_p1;
    tmp_1_fu_100_p4 <= x_in(35 downto 24);
    tmp_2_fu_110_p4 <= x_in(47 downto 36);
    tmp_3_fu_120_p4 <= x_in(59 downto 48);
    tmp_4_fu_130_p4 <= x_in(71 downto 60);
    tmp_5_fu_140_p4 <= x_in(83 downto 72);
    tmp_6_fu_150_p4 <= x_in(95 downto 84);
    tmp_7_fu_160_p4 <= x_in(107 downto 96);
    tmp_8_fu_170_p4 <= x_in(119 downto 108);
    tmp_9_fu_180_p4 <= x_in(131 downto 120);
    tmp_s_fu_90_p4 <= x_in(23 downto 12);
    trunc_ln60_fu_80_p1 <= x_in(12 - 1 downto 0);

    x_in_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, x_in_ap_vld)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            x_in_blk_n <= x_in_ap_vld;
        else 
            x_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;

end behav;
