// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module model_test_sparse_compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read1,
        p_read3,
        p_read5,
        p_read7,
        p_read9,
        p_read11,
        p_read13,
        p_read15,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        p_read25,
        p_read26,
        p_read27,
        p_read28,
        p_read29,
        ap_return
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1:0] p_read1;
input  [1:0] p_read3;
input  [2:0] p_read5;
input  [2:0] p_read7;
input  [2:0] p_read9;
input  [1:0] p_read11;
input  [3:0] p_read13;
input  [3:0] p_read15;
input  [3:0] p_read17;
input  [1:0] p_read18;
input  [3:0] p_read19;
input  [11:0] p_read20;
input  [11:0] p_read21;
input  [11:0] p_read22;
input  [11:0] p_read23;
input  [11:0] p_read24;
input  [11:0] p_read25;
input  [11:0] p_read26;
input  [11:0] p_read27;
input  [11:0] p_read28;
input  [11:0] p_read29;
output  [20:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[20:0] ap_return;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1;
wire   [0:0] icmp_ln105_fu_414_p2;
reg   [0:0] icmp_ln105_reg_2067;
wire   [3:0] zext_ln115_fu_420_p1;
reg   [3:0] zext_ln115_reg_2072;
wire   [2:0] zext_ln115_1_fu_424_p1;
reg   [2:0] zext_ln115_1_reg_2081;
wire   [2:0] zext_ln106_fu_428_p1;
reg   [2:0] zext_ln106_reg_2086;
wire   [3:0] zext_ln106_1_fu_432_p1;
reg   [3:0] zext_ln106_1_reg_2091;
wire   [3:0] zext_ln106_2_fu_436_p1;
reg   [3:0] zext_ln106_2_reg_2096;
wire   [3:0] zext_ln106_3_fu_440_p1;
reg   [3:0] zext_ln106_3_reg_2101;
wire   [3:0] zext_ln106_4_fu_448_p1;
reg   [3:0] zext_ln106_4_reg_2106;
wire   [18:0] add_ln_fu_472_p3;
wire  signed [19:0] sext_ln113_fu_480_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] xor_ln113_fu_489_p2;
reg   [0:0] xor_ln113_reg_2122;
wire  signed [19:0] sext_ln122_fu_546_p1;
wire   [0:0] or_ln113_fu_494_p2;
wire   [0:0] icmp_ln117_fu_504_p2;
wire   [0:0] icmp_ln120_fu_510_p2;
wire  signed [19:0] grp_fu_1916_p3;
wire   [19:0] add_ln121_1_fu_603_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] or_ln113_1_fu_558_p2;
wire   [0:0] icmp_ln117_1_fu_567_p2;
wire   [0:0] icmp_ln120_1_fu_573_p2;
wire  signed [19:0] grp_fu_1924_p3;
wire   [19:0] add_ln121_2_fu_660_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln113_2_fu_612_p2;
wire   [0:0] grp_fu_409_p2;
wire   [0:0] icmp_ln117_2_fu_627_p2;
wire   [0:0] icmp_ln120_2_fu_633_p2;
wire  signed [19:0] grp_fu_1932_p3;
wire   [19:0] add_ln121_3_fu_714_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln113_4_fu_666_p2;
wire   [0:0] icmp_ln117_3_fu_681_p2;
wire   [0:0] icmp_ln120_3_fu_687_p2;
wire  signed [19:0] grp_fu_1940_p3;
wire   [0:0] icmp_ln105_1_fu_720_p2;
reg   [0:0] icmp_ln105_1_reg_2209;
wire   [0:0] icmp_ln113_6_fu_725_p2;
reg   [0:0] icmp_ln113_6_reg_2215;
wire   [0:0] icmp_ln117_4_fu_734_p2;
reg   [0:0] icmp_ln117_4_reg_2224;
wire   [0:0] icmp_ln120_4_fu_740_p2;
reg   [0:0] icmp_ln120_4_reg_2230;
wire   [0:0] xor_ln113_1_fu_746_p2;
reg   [0:0] xor_ln113_1_reg_2235;
wire   [0:0] and_ln120_fu_764_p2;
reg   [0:0] and_ln120_reg_2248;
wire   [0:0] icmp_ln105_2_fu_770_p2;
reg   [0:0] icmp_ln105_2_reg_2253;
wire   [0:0] icmp_ln105_3_fu_775_p2;
reg   [0:0] icmp_ln105_3_reg_2259;
wire   [0:0] icmp_ln117_5_fu_792_p2;
reg   [0:0] icmp_ln117_5_reg_2265;
wire   [0:0] and_ln120_1_fu_816_p2;
reg   [0:0] and_ln120_1_reg_2270;
wire   [0:0] or_ln138_1_fu_834_p2;
reg   [0:0] or_ln138_1_reg_2275;
wire   [0:0] icmp_ln117_6_fu_849_p2;
reg   [0:0] icmp_ln117_6_reg_2281;
wire   [0:0] icmp_ln120_6_fu_855_p2;
reg   [0:0] icmp_ln120_6_reg_2287;
wire   [0:0] and_ln120_2_fu_873_p2;
reg   [0:0] and_ln120_2_reg_2292;
wire   [0:0] icmp_ln105_4_fu_879_p2;
reg   [0:0] icmp_ln105_4_reg_2297;
wire   [0:0] icmp_ln117_7_fu_893_p2;
reg   [0:0] icmp_ln117_7_reg_2303;
wire   [0:0] icmp_ln120_7_fu_899_p2;
reg   [0:0] icmp_ln120_7_reg_2309;
wire   [0:0] and_ln120_3_fu_917_p2;
reg   [0:0] and_ln120_3_reg_2314;
wire   [0:0] icmp_ln117_9_fu_941_p2;
reg   [0:0] icmp_ln117_9_reg_2319;
wire   [0:0] icmp_ln120_8_fu_947_p2;
reg   [0:0] icmp_ln120_8_reg_2326;
wire   [0:0] icmp_ln123_1_fu_953_p2;
reg   [0:0] icmp_ln123_1_reg_2332;
wire   [0:0] icmp_ln132_fu_957_p2;
reg   [0:0] icmp_ln132_reg_2338;
wire   [0:0] icmp_ln138_fu_969_p2;
reg   [0:0] icmp_ln138_reg_2344;
wire   [20:0] select_ln105_fu_1090_p3;
reg   [20:0] select_ln105_reg_2349;
wire    ap_CS_fsm_state6;
wire   [20:0] add_ln135_1_fu_1179_p2;
reg   [20:0] add_ln135_1_reg_2355;
wire   [17:0] select_ln135_5_fu_1261_p3;
reg   [17:0] select_ln135_5_reg_2360;
wire   [0:0] or_ln120_2_fu_1268_p2;
reg   [0:0] or_ln120_2_reg_2365;
wire   [17:0] select_ln135_7_fu_1338_p3;
reg   [17:0] select_ln135_7_reg_2371;
wire   [0:0] or_ln120_3_fu_1345_p2;
reg   [0:0] or_ln120_3_reg_2376;
wire   [0:0] icmp_ln105_5_fu_1349_p2;
reg   [0:0] icmp_ln105_5_reg_2382;
wire   [0:0] and_ln117_8_fu_1359_p2;
reg   [0:0] and_ln117_8_reg_2388;
wire   [0:0] and_ln123_1_fu_1426_p2;
reg   [0:0] and_ln123_1_reg_2393;
wire   [0:0] and_ln129_1_fu_1462_p2;
reg   [0:0] and_ln129_1_reg_2398;
wire   [0:0] and_ln135_1_fu_1498_p2;
reg   [0:0] and_ln135_1_reg_2403;
wire   [0:0] or_ln135_fu_1504_p2;
reg   [0:0] or_ln135_reg_2408;
wire   [0:0] or_ln135_2_fu_1516_p2;
reg   [0:0] or_ln135_2_reg_2413;
wire   [0:0] or_ln135_3_fu_1522_p2;
reg   [0:0] or_ln135_3_reg_2418;
wire   [0:0] or_ln138_10_fu_1563_p2;
reg   [0:0] or_ln138_10_reg_2423;
wire   [0:0] or_ln105_2_fu_1575_p2;
reg   [0:0] or_ln105_2_reg_2429;
reg  signed [18:0] feat_out_0_loc_78_reg_236;
reg   [0:0] feat_out_0_flag_88_reg_247;
reg  signed [19:0] feat_out_0_loc_8_reg_261;
reg   [0:0] feat_out_0_flag_8_reg_275;
reg  signed [19:0] feat_out_0_loc_17_reg_294;
reg   [0:0] feat_out_0_flag_17_reg_310;
reg  signed [19:0] feat_out_0_loc_77_reg_329;
reg   [0:0] feat_out_0_flag_87_reg_348;
reg   [19:0] feat_out_0_loc_76_reg_370;
reg   [0:0] feat_out_0_flag_86_reg_388;
wire  signed [11:0] grp_fu_409_p0;
wire  signed [11:0] icmp_ln105_fu_414_p0;
wire  signed [2:0] sext_ln106_1_fu_444_p1;
wire   [7:0] mul_ln106_fu_456_p1;
wire   [18:0] mul_ln106_fu_456_p2;
wire   [17:0] tmp_1_fu_462_p4;
wire  signed [11:0] icmp_ln113_fu_484_p0;
wire   [0:0] icmp_ln113_fu_484_p2;
wire   [2:0] sub_ln115_fu_500_p2;
wire  signed [11:0] sext_ln121_fu_516_p0;
wire  signed [11:0] shl_ln_fu_519_p1;
wire   [13:0] shl_ln_fu_519_p3;
wire  signed [14:0] sext_ln121_1_fu_526_p1;
wire  signed [14:0] sext_ln121_fu_516_p1;
wire   [14:0] sub_ln121_fu_530_p2;
wire  signed [18:0] sext_ln121_2_fu_536_p1;
wire   [18:0] add_ln121_fu_540_p2;
wire  signed [11:0] icmp_ln113_1_fu_553_p0;
wire   [0:0] icmp_ln113_1_fu_553_p2;
wire   [3:0] sub_ln115_1_fu_563_p2;
wire  signed [11:0] sext_ln121_3_fu_579_p0;
wire  signed [11:0] shl_ln121_1_fu_582_p1;
wire   [13:0] shl_ln121_1_fu_582_p3;
wire  signed [14:0] sext_ln121_4_fu_589_p1;
wire  signed [14:0] sext_ln121_3_fu_579_p1;
wire   [14:0] sub_ln121_1_fu_593_p2;
wire  signed [19:0] sext_ln121_5_fu_599_p1;
wire  signed [11:0] icmp_ln113_2_fu_612_p0;
wire  signed [11:0] sext_ln106_2_fu_617_p0;
wire   [3:0] sub_ln115_2_fu_623_p2;
wire  signed [11:0] shl_ln121_2_fu_639_p1;
wire   [13:0] shl_ln121_2_fu_639_p3;
wire  signed [14:0] sext_ln121_6_fu_646_p1;
wire  signed [14:0] sext_ln106_2_fu_617_p1;
wire   [14:0] sub_ln121_2_fu_650_p2;
wire  signed [19:0] sext_ln121_7_fu_656_p1;
wire  signed [11:0] icmp_ln113_4_fu_666_p0;
wire  signed [11:0] sext_ln106_4_fu_671_p0;
wire   [3:0] sub_ln115_3_fu_677_p2;
wire  signed [11:0] shl_ln121_3_fu_693_p1;
wire   [13:0] shl_ln121_3_fu_693_p3;
wire  signed [14:0] sext_ln121_8_fu_700_p1;
wire  signed [14:0] sext_ln106_4_fu_671_p1;
wire   [14:0] sub_ln121_3_fu_704_p2;
wire  signed [19:0] sext_ln121_9_fu_710_p1;
wire  signed [11:0] icmp_ln105_1_fu_720_p0;
wire  signed [11:0] icmp_ln113_6_fu_725_p0;
wire   [3:0] sub_ln115_4_fu_730_p2;
wire   [0:0] xor_ln117_fu_752_p2;
wire   [0:0] and_ln117_1_fu_758_p2;
wire  signed [11:0] icmp_ln105_2_fu_770_p0;
wire  signed [11:0] icmp_ln105_3_fu_775_p0;
wire   [4:0] zext_ln115_2_fu_780_p1;
wire   [4:0] zext_ln115_3_fu_783_p1;
wire   [4:0] sub_ln115_5_fu_786_p2;
wire   [0:0] xor_ln117_1_fu_804_p2;
wire   [0:0] and_ln117_3_fu_810_p2;
wire   [0:0] icmp_ln120_5_fu_798_p2;
wire   [0:0] or_ln120_1_fu_822_p2;
wire   [0:0] xor_ln120_1_fu_828_p2;
wire   [4:0] zext_ln115_4_fu_840_p1;
wire   [4:0] sub_ln115_6_fu_843_p2;
wire   [0:0] xor_ln117_2_fu_861_p2;
wire   [0:0] and_ln117_5_fu_867_p2;
wire  signed [11:0] icmp_ln105_4_fu_879_p0;
wire   [4:0] zext_ln115_5_fu_884_p1;
wire   [4:0] sub_ln115_7_fu_887_p2;
wire   [0:0] xor_ln117_3_fu_905_p2;
wire   [0:0] and_ln117_7_fu_911_p2;
wire  signed [1:0] sub_ln114_fu_923_p2;
wire   [4:0] zext_ln115_6_fu_932_p1;
wire   [4:0] sub_ln115_8_fu_935_p2;
wire  signed [4:0] sext_ln115_fu_928_p1;
wire   [4:0] and_ln138_3_fu_963_p2;
wire  signed [11:0] sext_ln106_7_fu_982_p0;
wire   [6:0] mul_ln120_fu_985_p1;
wire  signed [11:0] shl_ln121_4_fu_991_p1;
wire   [13:0] shl_ln121_4_fu_991_p3;
wire  signed [14:0] sext_ln121_10_fu_998_p1;
wire  signed [14:0] sext_ln106_7_fu_982_p1;
wire  signed [11:0] shl_ln139_4_fu_1008_p1;
wire   [12:0] shl_ln139_4_fu_1008_p3;
wire  signed [13:0] sext_ln139_fu_1015_p1;
wire   [13:0] sub_ln139_fu_1019_p2;
wire   [14:0] sub_ln121_4_fu_1002_p2;
wire   [0:0] and_ln117_fu_1029_p2;
wire   [17:0] mul_ln120_fu_985_p2;
wire  signed [17:0] sext_ln113_1_fu_1025_p1;
wire  signed [17:0] sext_ln135_fu_1033_p1;
wire   [17:0] select_ln135_fu_1037_p3;
wire   [17:0] select_ln135_1_fu_1045_p3;
wire  signed [20:0] sext_ln105_fu_975_p1;
wire  signed [20:0] sext_ln135_1_fu_1052_p1;
wire   [0:0] or_ln120_fu_1062_p2;
wire   [0:0] xor_ln120_fu_1066_p2;
wire   [0:0] or_ln138_fu_1072_p2;
wire   [20:0] add_ln135_fu_1056_p2;
wire   [20:0] select_ln138_fu_1077_p3;
wire   [0:0] and_ln138_fu_1085_p2;
wire  signed [11:0] sext_ln106_9_fu_1105_p0;
wire   [6:0] mul_ln120_1_fu_1108_p1;
wire  signed [11:0] shl_ln121_5_fu_1114_p1;
wire   [13:0] shl_ln121_5_fu_1114_p3;
wire  signed [14:0] sext_ln121_11_fu_1121_p1;
wire  signed [14:0] sext_ln106_9_fu_1105_p1;
wire  signed [11:0] shl_ln139_5_fu_1131_p1;
wire   [12:0] shl_ln139_5_fu_1131_p3;
wire  signed [13:0] sext_ln139_1_fu_1138_p1;
wire   [13:0] sub_ln139_1_fu_1142_p2;
wire   [14:0] sub_ln121_5_fu_1125_p2;
wire   [0:0] and_ln117_2_fu_1152_p2;
wire   [17:0] mul_ln120_1_fu_1108_p2;
wire  signed [17:0] sext_ln117_fu_1148_p1;
wire  signed [17:0] sext_ln135_2_fu_1156_p1;
wire   [17:0] select_ln135_2_fu_1160_p3;
wire   [17:0] select_ln135_3_fu_1168_p3;
wire  signed [20:0] sext_ln135_3_fu_1175_p1;
wire   [0:0] or_ln105_fu_1185_p2;
wire  signed [11:0] sext_ln106_11_fu_1198_p0;
wire   [6:0] mul_ln120_2_fu_1201_p1;
wire  signed [11:0] shl_ln121_6_fu_1207_p1;
wire   [13:0] shl_ln121_6_fu_1207_p3;
wire  signed [14:0] sext_ln121_12_fu_1214_p1;
wire  signed [14:0] sext_ln106_11_fu_1198_p1;
wire  signed [11:0] shl_ln139_6_fu_1224_p1;
wire   [12:0] shl_ln139_6_fu_1224_p3;
wire  signed [13:0] sext_ln139_2_fu_1231_p1;
wire   [13:0] sub_ln139_2_fu_1235_p2;
wire   [14:0] sub_ln121_6_fu_1218_p2;
wire   [0:0] and_ln117_4_fu_1245_p2;
wire   [17:0] mul_ln120_2_fu_1201_p2;
wire  signed [17:0] sext_ln117_1_fu_1241_p1;
wire  signed [17:0] sext_ln135_4_fu_1249_p1;
wire   [17:0] select_ln135_4_fu_1253_p3;
wire  signed [11:0] sext_ln106_13_fu_1275_p0;
wire   [6:0] mul_ln120_3_fu_1278_p1;
wire  signed [11:0] shl_ln121_7_fu_1284_p1;
wire   [13:0] shl_ln121_7_fu_1284_p3;
wire  signed [14:0] sext_ln121_13_fu_1291_p1;
wire  signed [14:0] sext_ln106_13_fu_1275_p1;
wire  signed [11:0] shl_ln139_7_fu_1301_p1;
wire   [12:0] shl_ln139_7_fu_1301_p3;
wire  signed [13:0] sext_ln139_3_fu_1308_p1;
wire   [13:0] sub_ln139_3_fu_1312_p2;
wire   [14:0] sub_ln121_7_fu_1295_p2;
wire   [0:0] and_ln117_6_fu_1322_p2;
wire   [17:0] mul_ln120_3_fu_1278_p2;
wire  signed [17:0] sext_ln117_2_fu_1318_p1;
wire  signed [17:0] sext_ln135_6_fu_1326_p1;
wire   [17:0] select_ln135_6_fu_1330_p3;
wire  signed [11:0] icmp_ln105_5_fu_1349_p0;
wire   [0:0] icmp_ln117_8_fu_1354_p2;
wire   [0:0] icmp_ln123_fu_1369_p2;
wire   [0:0] or_ln117_fu_1397_p2;
wire   [0:0] and_ln120_4_fu_1364_p2;
wire   [0:0] xor_ln117_4_fu_1402_p2;
wire   [0:0] or_ln120_4_fu_1414_p2;
wire   [0:0] and_ln123_fu_1374_p2;
wire   [0:0] xor_ln120_4_fu_1420_p2;
wire   [0:0] or_ln123_fu_1432_p2;
wire   [0:0] and_ln126_fu_1379_p2;
wire   [0:0] xor_ln123_fu_1438_p2;
wire   [0:0] or_ln126_fu_1450_p2;
wire   [0:0] and_ln129_fu_1384_p2;
wire   [0:0] xor_ln126_fu_1456_p2;
wire   [0:0] or_ln129_fu_1468_p2;
wire   [0:0] and_ln132_fu_1389_p2;
wire   [0:0] xor_ln129_fu_1474_p2;
wire   [0:0] or_ln132_fu_1486_p2;
wire   [0:0] and_ln135_fu_1393_p2;
wire   [0:0] xor_ln132_fu_1492_p2;
wire   [0:0] and_ln132_1_fu_1480_p2;
wire   [0:0] and_ln126_1_fu_1444_p2;
wire   [0:0] and_ln120_5_fu_1408_p2;
wire   [0:0] or_ln135_1_fu_1510_p2;
wire   [0:0] or_ln138_5_fu_1534_p2;
wire   [0:0] or_ln138_4_fu_1528_p2;
wire   [0:0] or_ln138_8_fu_1552_p2;
wire   [0:0] or_ln138_7_fu_1546_p2;
wire   [0:0] or_ln138_9_fu_1557_p2;
wire   [0:0] or_ln138_6_fu_1540_p2;
wire   [0:0] and_ln105_fu_1097_p2;
wire   [0:0] xor_ln105_fu_1189_p2;
wire   [0:0] or_ln105_1_fu_1569_p2;
wire    ap_CS_fsm_state7;
wire   [20:0] select_ln138_1_fu_1581_p3;
wire   [20:0] select_ln105_1_fu_1586_p3;
wire  signed [20:0] sext_ln135_5_fu_1592_p1;
wire   [0:0] xor_ln120_2_fu_1601_p2;
wire   [0:0] or_ln138_2_fu_1606_p2;
wire   [20:0] add_ln135_2_fu_1595_p2;
wire   [20:0] select_ln138_2_fu_1611_p3;
wire   [0:0] and_ln138_1_fu_1619_p2;
wire   [20:0] select_ln105_2_fu_1623_p3;
wire  signed [20:0] sext_ln135_7_fu_1635_p1;
wire   [0:0] xor_ln120_3_fu_1644_p2;
wire   [0:0] or_ln138_3_fu_1649_p2;
wire   [20:0] add_ln135_3_fu_1638_p2;
wire   [20:0] select_ln138_3_fu_1654_p3;
wire   [0:0] and_ln138_2_fu_1662_p2;
wire  signed [11:0] sext_ln106_14_fu_1678_p0;
wire  signed [11:0] sext_ln106_15_fu_1681_p0;
wire  signed [11:0] sext_ln106_16_fu_1684_p0;
wire  signed [11:0] mul_ln120_4_fu_1687_p0;
wire  signed [17:0] sext_ln106_15_fu_1681_p1;
wire   [6:0] mul_ln120_4_fu_1687_p1;
wire  signed [11:0] shl_ln121_8_fu_1693_p1;
wire   [13:0] shl_ln121_8_fu_1693_p3;
wire  signed [14:0] sext_ln121_14_fu_1700_p1;
wire  signed [14:0] sext_ln106_16_fu_1684_p1;
wire  signed [14:0] sub_ln121_8_fu_1704_p2;
wire  signed [11:0] mul_ln126_fu_1718_p0;
wire  signed [16:0] sext_ln106_14_fu_1678_p1;
wire   [5:0] mul_ln126_fu_1718_p1;
wire  signed [11:0] shl_ln127_8_fu_1724_p1;
wire   [16:0] shl_ln127_8_fu_1724_p3;
wire  signed [17:0] sext_ln127_fu_1731_p1;
wire  signed [11:0] shl_ln133_8_fu_1741_p1;
wire   [15:0] shl_ln133_8_fu_1741_p3;
wire  signed [16:0] sext_ln133_fu_1748_p1;
wire  signed [11:0] mul_ln136_fu_1758_p0;
wire  signed [4:0] mul_ln136_fu_1758_p1;
wire  signed [11:0] shl_ln139_8_fu_1764_p1;
wire   [12:0] shl_ln139_8_fu_1764_p3;
wire  signed [13:0] sext_ln139_4_fu_1771_p1;
wire   [13:0] sub_ln139_4_fu_1775_p2;
wire   [16:0] mul_ln136_fu_1758_p2;
wire   [16:0] sub_ln133_fu_1752_p2;
wire   [16:0] select_ln135_8_fu_1789_p3;
wire  signed [17:0] sext_ln123_1_fu_1714_p1;
wire   [17:0] sub_ln127_fu_1735_p2;
wire   [16:0] mul_ln126_fu_1718_p2;
wire  signed [16:0] sext_ln123_fu_1710_p1;
wire   [16:0] select_ln135_10_fu_1807_p3;
wire   [0:0] and_ln117_9_fu_1785_p2;
wire   [17:0] mul_ln120_4_fu_1687_p2;
wire  signed [17:0] sext_ln117_3_fu_1781_p1;
wire  signed [17:0] sext_ln135_8_fu_1796_p1;
wire   [17:0] select_ln135_9_fu_1800_p3;
wire  signed [17:0] sext_ln135_9_fu_1814_p1;
wire   [17:0] select_ln135_11_fu_1818_p3;
wire   [17:0] select_ln135_12_fu_1826_p3;
wire   [17:0] select_ln135_13_fu_1833_p3;
wire   [17:0] select_ln135_14_fu_1840_p3;
wire   [20:0] select_ln105_3_fu_1666_p3;
wire  signed [20:0] sext_ln135_10_fu_1847_p1;
wire   [0:0] xor_ln138_fu_1857_p2;
wire   [0:0] or_ln138_11_fu_1862_p2;
wire   [20:0] add_ln135_4_fu_1851_p2;
wire   [20:0] select_ln138_4_fu_1867_p3;
wire   [0:0] and_ln105_3_fu_1882_p2;
wire   [0:0] and_ln105_2_fu_1673_p2;
wire   [0:0] and_ln105_4_fu_1886_p2;
wire   [0:0] or_ln105_3_fu_1891_p2;
wire   [0:0] and_ln105_1_fu_1630_p2;
wire   [0:0] or_ln105_4_fu_1897_p2;
wire   [0:0] or_ln105_5_fu_1903_p2;
wire   [20:0] select_ln105_4_fu_1875_p3;
wire   [5:0] grp_fu_1916_p1;
wire   [5:0] grp_fu_1924_p1;
wire   [5:0] grp_fu_1932_p1;
wire   [5:0] grp_fu_1940_p1;
wire   [20:0] feat_out_0_out_0_fu_1908_p3;
reg   [20:0] ap_return_preg;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_condition_57;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_return_preg = 21'd0;
end

model_test_mul_12s_8ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 19 ))
mul_12s_8ns_19_1_1_U2(
    .din0(p_read20),
    .din1(mul_ln106_fu_456_p1),
    .dout(mul_ln106_fu_456_p2)
);

model_test_mul_12s_7ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 18 ))
mul_12s_7ns_18_1_1_U3(
    .din0(p_read25),
    .din1(mul_ln120_fu_985_p1),
    .dout(mul_ln120_fu_985_p2)
);

model_test_mul_12s_7ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 18 ))
mul_12s_7ns_18_1_1_U4(
    .din0(p_read26),
    .din1(mul_ln120_1_fu_1108_p1),
    .dout(mul_ln120_1_fu_1108_p2)
);

model_test_mul_12s_7ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 18 ))
mul_12s_7ns_18_1_1_U5(
    .din0(p_read27),
    .din1(mul_ln120_2_fu_1201_p1),
    .dout(mul_ln120_2_fu_1201_p2)
);

model_test_mul_12s_7ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 18 ))
mul_12s_7ns_18_1_1_U6(
    .din0(p_read28),
    .din1(mul_ln120_3_fu_1278_p1),
    .dout(mul_ln120_3_fu_1278_p2)
);

model_test_mul_12s_7ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 18 ))
mul_12s_7ns_18_1_1_U7(
    .din0(mul_ln120_4_fu_1687_p0),
    .din1(mul_ln120_4_fu_1687_p1),
    .dout(mul_ln120_4_fu_1687_p2)
);

model_test_mul_12s_6ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 17 ))
mul_12s_6ns_17_1_1_U8(
    .din0(mul_ln126_fu_1718_p0),
    .din1(mul_ln126_fu_1718_p1),
    .dout(mul_ln126_fu_1718_p2)
);

model_test_mul_12s_5s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 17 ))
mul_12s_5s_17_1_1_U9(
    .din0(mul_ln136_fu_1758_p0),
    .din1(mul_ln136_fu_1758_p1),
    .dout(mul_ln136_fu_1758_p2)
);

model_test_mac_muladd_12s_6ns_19s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 20 ))
mac_muladd_12s_6ns_19s_20_1_1_U10(
    .din0(p_read21),
    .din1(grp_fu_1916_p1),
    .din2(feat_out_0_loc_78_reg_236),
    .dout(grp_fu_1916_p3)
);

model_test_mac_muladd_12s_6ns_20s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
mac_muladd_12s_6ns_20s_20_1_1_U11(
    .din0(p_read22),
    .din1(grp_fu_1924_p1),
    .din2(feat_out_0_loc_8_reg_261),
    .dout(grp_fu_1924_p3)
);

model_test_mac_muladd_12s_6ns_20s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
mac_muladd_12s_6ns_20s_20_1_1_U12(
    .din0(p_read23),
    .din1(grp_fu_1932_p1),
    .din2(feat_out_0_loc_17_reg_294),
    .dout(grp_fu_1932_p3)
);

model_test_mac_muladd_12s_6ns_20s_20_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 20 ),
    .dout_WIDTH( 20 ))
mac_muladd_12s_6ns_20s_20_1_1_U13(
    .din0(p_read24),
    .din1(grp_fu_1940_p1),
    .din2(feat_out_0_loc_77_reg_329),
    .dout(grp_fu_1940_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 21'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_return_preg <= feat_out_0_out_0_fu_1908_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln117_1_fu_567_p2 == 1'd1) & (or_ln113_1_fu_558_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln120_1_fu_573_p2 == 1'd1) & (icmp_ln117_1_fu_567_p2 == 1'd0) & (or_ln113_1_fu_558_p2 == 1'd0)))) begin
        feat_out_0_flag_17_reg_310 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln120_1_fu_573_p2 == 1'd0) & (icmp_ln117_1_fu_567_p2 == 1'd0) & (or_ln113_1_fu_558_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (or_ln113_1_fu_558_p2 == 1'd1)))) begin
        feat_out_0_flag_17_reg_310 <= feat_out_0_flag_8_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (icmp_ln117_3_fu_681_p2 == 1'd1) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln120_3_fu_687_p2 == 1'd1) & (icmp_ln117_3_fu_681_p2 == 1'd0) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0)))) begin
        feat_out_0_flag_86_reg_388 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state5) & (icmp_ln120_3_fu_687_p2 == 1'd0) & (icmp_ln117_3_fu_681_p2 == 1'd0) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln113_4_fu_666_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd1)))) begin
        feat_out_0_flag_86_reg_388 <= feat_out_0_flag_87_reg_348;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln117_2_fu_627_p2 == 1'd1) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln120_2_fu_633_p2 == 1'd1) & (icmp_ln117_2_fu_627_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0)))) begin
        feat_out_0_flag_87_reg_348 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln120_2_fu_633_p2 == 1'd0) & (icmp_ln117_2_fu_627_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (grp_fu_409_p2 == 1'd1) & (icmp_ln113_2_fu_612_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln113_2_fu_612_p2 == 1'd1)))) begin
        feat_out_0_flag_87_reg_348 <= feat_out_0_flag_17_reg_310;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_57)) begin
        if ((icmp_ln105_fu_414_p2 == 1'd1)) begin
            feat_out_0_flag_88_reg_247 <= 1'd1;
        end else if ((icmp_ln105_fu_414_p2 == 1'd0)) begin
            feat_out_0_flag_88_reg_247 <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_504_p2 == 1'd1) & (or_ln113_fu_494_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln120_fu_510_p2 == 1'd1) & (icmp_ln117_fu_504_p2 == 1'd0) & (or_ln113_fu_494_p2 == 1'd0)))) begin
        feat_out_0_flag_8_reg_275 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln120_fu_510_p2 == 1'd0) & (icmp_ln117_fu_504_p2 == 1'd0) & (or_ln113_fu_494_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (or_ln113_fu_494_p2 == 1'd1)))) begin
        feat_out_0_flag_8_reg_275 <= feat_out_0_flag_88_reg_247;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln120_1_fu_573_p2 == 1'd1) & (icmp_ln117_1_fu_567_p2 == 1'd0) & (or_ln113_1_fu_558_p2 == 1'd0))) begin
        feat_out_0_loc_17_reg_294 <= add_ln121_1_fu_603_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln117_1_fu_567_p2 == 1'd1) & (or_ln113_1_fu_558_p2 == 1'd0))) begin
        feat_out_0_loc_17_reg_294 <= grp_fu_1924_p3;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln120_1_fu_573_p2 == 1'd0) & (icmp_ln117_1_fu_567_p2 == 1'd0) & (or_ln113_1_fu_558_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (or_ln113_1_fu_558_p2 == 1'd1)))) begin
        feat_out_0_loc_17_reg_294 <= feat_out_0_loc_8_reg_261;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln120_3_fu_687_p2 == 1'd1) & (icmp_ln117_3_fu_681_p2 == 1'd0) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0))) begin
        feat_out_0_loc_76_reg_370 <= add_ln121_3_fu_714_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln117_3_fu_681_p2 == 1'd1) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0))) begin
        feat_out_0_loc_76_reg_370 <= grp_fu_1940_p3;
    end else if ((((1'b1 == ap_CS_fsm_state5) & (icmp_ln120_3_fu_687_p2 == 1'd0) & (icmp_ln117_3_fu_681_p2 == 1'd0) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln113_4_fu_666_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln113_4_fu_666_p2 == 1'd0) & (grp_fu_409_p2 == 1'd1)))) begin
        feat_out_0_loc_76_reg_370 <= feat_out_0_loc_77_reg_329;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln120_2_fu_633_p2 == 1'd1) & (icmp_ln117_2_fu_627_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0))) begin
        feat_out_0_loc_77_reg_329 <= add_ln121_2_fu_660_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln117_2_fu_627_p2 == 1'd1) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0))) begin
        feat_out_0_loc_77_reg_329 <= grp_fu_1932_p3;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (icmp_ln120_2_fu_633_p2 == 1'd0) & (icmp_ln117_2_fu_627_p2 == 1'd0) & (grp_fu_409_p2 == 1'd0) & (icmp_ln113_2_fu_612_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (grp_fu_409_p2 == 1'd1) & (icmp_ln113_2_fu_612_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln113_2_fu_612_p2 == 1'd1)))) begin
        feat_out_0_loc_77_reg_329 <= feat_out_0_loc_17_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_57)) begin
        if ((icmp_ln105_fu_414_p2 == 1'd1)) begin
                        feat_out_0_loc_78_reg_236[18 : 1] <= add_ln_fu_472_p3[18 : 1];
        end else if ((icmp_ln105_fu_414_p2 == 1'd0)) begin
                        feat_out_0_loc_78_reg_236[1] <= 1'b0;
            feat_out_0_loc_78_reg_236[2] <= 1'b0;
            feat_out_0_loc_78_reg_236[3] <= 1'b0;
            feat_out_0_loc_78_reg_236[4] <= 1'b0;
            feat_out_0_loc_78_reg_236[5] <= 1'b0;
            feat_out_0_loc_78_reg_236[6] <= 1'b0;
            feat_out_0_loc_78_reg_236[7] <= 1'b0;
            feat_out_0_loc_78_reg_236[8] <= 1'b0;
            feat_out_0_loc_78_reg_236[9] <= 1'b0;
            feat_out_0_loc_78_reg_236[10] <= 1'b0;
            feat_out_0_loc_78_reg_236[11] <= 1'b0;
            feat_out_0_loc_78_reg_236[12] <= 1'b0;
            feat_out_0_loc_78_reg_236[13] <= 1'b0;
            feat_out_0_loc_78_reg_236[14] <= 1'b0;
            feat_out_0_loc_78_reg_236[15] <= 1'b0;
            feat_out_0_loc_78_reg_236[16] <= 1'b0;
            feat_out_0_loc_78_reg_236[17] <= 1'b0;
            feat_out_0_loc_78_reg_236[18] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln120_fu_510_p2 == 1'd1) & (icmp_ln117_fu_504_p2 == 1'd0) & (or_ln113_fu_494_p2 == 1'd0))) begin
        feat_out_0_loc_8_reg_261 <= sext_ln122_fu_546_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln117_fu_504_p2 == 1'd1) & (or_ln113_fu_494_p2 == 1'd0))) begin
        feat_out_0_loc_8_reg_261 <= grp_fu_1916_p3;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln120_fu_510_p2 == 1'd0) & (icmp_ln117_fu_504_p2 == 1'd0) & (or_ln113_fu_494_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (or_ln113_fu_494_p2 == 1'd1)))) begin
        feat_out_0_loc_8_reg_261 <= sext_ln113_fu_480_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln138_1_reg_2275 == 1'd0) & (icmp_ln105_2_reg_2253 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln135_1_reg_2355 <= add_ln135_1_fu_1179_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln117_8_reg_2388 <= and_ln117_8_fu_1359_p2;
        and_ln123_1_reg_2393 <= and_ln123_1_fu_1426_p2;
        and_ln129_1_reg_2398 <= and_ln129_1_fu_1462_p2;
        and_ln135_1_reg_2403 <= and_ln135_1_fu_1498_p2;
        icmp_ln105_5_reg_2382 <= icmp_ln105_5_fu_1349_p2;
        or_ln105_2_reg_2429 <= or_ln105_2_fu_1575_p2;
        or_ln120_2_reg_2365 <= or_ln120_2_fu_1268_p2;
        or_ln120_3_reg_2376 <= or_ln120_3_fu_1345_p2;
        or_ln135_2_reg_2413 <= or_ln135_2_fu_1516_p2;
        or_ln135_3_reg_2418 <= or_ln135_3_fu_1522_p2;
        or_ln135_reg_2408 <= or_ln135_fu_1504_p2;
        or_ln138_10_reg_2423 <= or_ln138_10_fu_1563_p2;
        select_ln105_reg_2349 <= select_ln105_fu_1090_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        and_ln120_1_reg_2270 <= and_ln120_1_fu_816_p2;
        and_ln120_2_reg_2292 <= and_ln120_2_fu_873_p2;
        and_ln120_3_reg_2314 <= and_ln120_3_fu_917_p2;
        and_ln120_reg_2248 <= and_ln120_fu_764_p2;
        icmp_ln105_1_reg_2209 <= icmp_ln105_1_fu_720_p2;
        icmp_ln105_2_reg_2253 <= icmp_ln105_2_fu_770_p2;
        icmp_ln105_3_reg_2259 <= icmp_ln105_3_fu_775_p2;
        icmp_ln105_4_reg_2297 <= icmp_ln105_4_fu_879_p2;
        icmp_ln113_6_reg_2215 <= icmp_ln113_6_fu_725_p2;
        icmp_ln117_4_reg_2224 <= icmp_ln117_4_fu_734_p2;
        icmp_ln117_5_reg_2265 <= icmp_ln117_5_fu_792_p2;
        icmp_ln117_6_reg_2281 <= icmp_ln117_6_fu_849_p2;
        icmp_ln117_7_reg_2303 <= icmp_ln117_7_fu_893_p2;
        icmp_ln117_9_reg_2319 <= icmp_ln117_9_fu_941_p2;
        icmp_ln120_4_reg_2230 <= icmp_ln120_4_fu_740_p2;
        icmp_ln120_6_reg_2287 <= icmp_ln120_6_fu_855_p2;
        icmp_ln120_7_reg_2309 <= icmp_ln120_7_fu_899_p2;
        icmp_ln120_8_reg_2326 <= icmp_ln120_8_fu_947_p2;
        icmp_ln123_1_reg_2332 <= icmp_ln123_1_fu_953_p2;
        icmp_ln132_reg_2338 <= icmp_ln132_fu_957_p2;
        icmp_ln138_reg_2344 <= icmp_ln138_fu_969_p2;
        or_ln138_1_reg_2275 <= or_ln138_1_fu_834_p2;
        xor_ln113_1_reg_2235 <= xor_ln113_1_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln105_reg_2067 <= icmp_ln105_fu_414_p2;
        zext_ln106_1_reg_2091[2 : 0] <= zext_ln106_1_fu_432_p1[2 : 0];
        zext_ln106_2_reg_2096[2 : 0] <= zext_ln106_2_fu_436_p1[2 : 0];
        zext_ln106_3_reg_2101[2 : 0] <= zext_ln106_3_fu_440_p1[2 : 0];
        zext_ln106_4_reg_2106[2 : 0] <= zext_ln106_4_fu_448_p1[2 : 0];
        zext_ln106_reg_2086[1 : 0] <= zext_ln106_fu_428_p1[1 : 0];
        zext_ln115_1_reg_2081[1 : 0] <= zext_ln115_1_fu_424_p1[1 : 0];
        zext_ln115_reg_2072[1 : 0] <= zext_ln115_fu_420_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_3_reg_2259 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        select_ln135_5_reg_2360 <= select_ln135_5_fu_1261_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_4_reg_2297 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        select_ln135_7_reg_2371 <= select_ln135_7_fu_1338_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        xor_ln113_reg_2122 <= xor_ln113_fu_489_p2;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_return = feat_out_0_out_0_fu_1908_p3;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln121_1_fu_603_p2 = ($signed(feat_out_0_loc_8_reg_261) + $signed(sext_ln121_5_fu_599_p1));

assign add_ln121_2_fu_660_p2 = ($signed(feat_out_0_loc_17_reg_294) + $signed(sext_ln121_7_fu_656_p1));

assign add_ln121_3_fu_714_p2 = ($signed(feat_out_0_loc_77_reg_329) + $signed(sext_ln121_9_fu_710_p1));

assign add_ln121_fu_540_p2 = ($signed(feat_out_0_loc_78_reg_236) + $signed(sext_ln121_2_fu_536_p1));

assign add_ln135_1_fu_1179_p2 = ($signed(select_ln105_fu_1090_p3) + $signed(sext_ln135_3_fu_1175_p1));

assign add_ln135_2_fu_1595_p2 = ($signed(select_ln105_1_fu_1586_p3) + $signed(sext_ln135_5_fu_1592_p1));

assign add_ln135_3_fu_1638_p2 = ($signed(select_ln105_2_fu_1623_p3) + $signed(sext_ln135_7_fu_1635_p1));

assign add_ln135_4_fu_1851_p2 = ($signed(select_ln105_3_fu_1666_p3) + $signed(sext_ln135_10_fu_1847_p1));

assign add_ln135_fu_1056_p2 = ($signed(sext_ln105_fu_975_p1) + $signed(sext_ln135_1_fu_1052_p1));

assign add_ln_fu_472_p3 = {{tmp_1_fu_462_p4}, {1'd0}};

assign and_ln105_1_fu_1630_p2 = (icmp_ln105_3_reg_2259 & and_ln138_1_fu_1619_p2);

assign and_ln105_2_fu_1673_p2 = (icmp_ln105_4_reg_2297 & and_ln138_2_fu_1662_p2);

assign and_ln105_3_fu_1882_p2 = (xor_ln113_1_reg_2235 & icmp_ln105_5_reg_2382);

assign and_ln105_4_fu_1886_p2 = (or_ln138_10_reg_2423 & and_ln105_3_fu_1882_p2);

assign and_ln105_fu_1097_p2 = (icmp_ln105_1_reg_2209 & and_ln138_fu_1085_p2);

assign and_ln117_1_fu_758_p2 = (xor_ln117_fu_752_p2 & xor_ln113_1_fu_746_p2);

assign and_ln117_2_fu_1152_p2 = (xor_ln113_1_reg_2235 & icmp_ln117_5_reg_2265);

assign and_ln117_3_fu_810_p2 = (xor_ln117_1_fu_804_p2 & xor_ln113_1_fu_746_p2);

assign and_ln117_4_fu_1245_p2 = (xor_ln113_1_reg_2235 & icmp_ln117_6_reg_2281);

assign and_ln117_5_fu_867_p2 = (xor_ln117_2_fu_861_p2 & xor_ln113_1_fu_746_p2);

assign and_ln117_6_fu_1322_p2 = (xor_ln113_1_reg_2235 & icmp_ln117_7_reg_2303);

assign and_ln117_7_fu_911_p2 = (xor_ln117_3_fu_905_p2 & xor_ln113_1_fu_746_p2);

assign and_ln117_8_fu_1359_p2 = (icmp_ln117_9_reg_2319 & icmp_ln117_8_fu_1354_p2);

assign and_ln117_9_fu_1785_p2 = (xor_ln113_1_reg_2235 & and_ln117_8_reg_2388);

assign and_ln117_fu_1029_p2 = (xor_ln113_1_reg_2235 & icmp_ln117_4_reg_2224);

assign and_ln120_1_fu_816_p2 = (icmp_ln120_5_fu_798_p2 & and_ln117_3_fu_810_p2);

assign and_ln120_2_fu_873_p2 = (icmp_ln120_6_fu_855_p2 & and_ln117_5_fu_867_p2);

assign and_ln120_3_fu_917_p2 = (icmp_ln120_7_fu_899_p2 & and_ln117_7_fu_911_p2);

assign and_ln120_4_fu_1364_p2 = (icmp_ln120_8_reg_2326 & icmp_ln117_8_fu_1354_p2);

assign and_ln120_5_fu_1408_p2 = (xor_ln117_4_fu_1402_p2 & and_ln120_4_fu_1364_p2);

assign and_ln120_fu_764_p2 = (icmp_ln120_4_fu_740_p2 & and_ln117_1_fu_758_p2);

assign and_ln123_1_fu_1426_p2 = (xor_ln120_4_fu_1420_p2 & and_ln123_fu_1374_p2);

assign and_ln123_fu_1374_p2 = (icmp_ln123_fu_1369_p2 & icmp_ln123_1_reg_2332);

assign and_ln126_1_fu_1444_p2 = (xor_ln123_fu_1438_p2 & and_ln126_fu_1379_p2);

assign and_ln126_fu_1379_p2 = (icmp_ln123_fu_1369_p2 & icmp_ln117_9_reg_2319);

assign and_ln129_1_fu_1462_p2 = (xor_ln126_fu_1456_p2 & and_ln129_fu_1384_p2);

assign and_ln129_fu_1384_p2 = (icmp_ln123_fu_1369_p2 & icmp_ln120_8_reg_2326);

assign and_ln132_1_fu_1480_p2 = (xor_ln129_fu_1474_p2 & and_ln132_fu_1389_p2);

assign and_ln132_fu_1389_p2 = (icmp_ln132_reg_2338 & icmp_ln123_1_reg_2332);

assign and_ln135_1_fu_1498_p2 = (xor_ln132_fu_1492_p2 & and_ln135_fu_1393_p2);

assign and_ln135_fu_1393_p2 = (icmp_ln132_reg_2338 & icmp_ln117_9_reg_2319);

assign and_ln138_1_fu_1619_p2 = (xor_ln113_1_reg_2235 & or_ln120_2_reg_2365);

assign and_ln138_2_fu_1662_p2 = (xor_ln113_1_reg_2235 & or_ln120_3_reg_2376);

assign and_ln138_3_fu_963_p2 = (sub_ln115_8_fu_935_p2 & sext_ln115_fu_928_p1);

assign and_ln138_fu_1085_p2 = (xor_ln113_1_reg_2235 & or_ln120_fu_1062_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_condition_57 = (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1));
end

assign feat_out_0_out_0_fu_1908_p3 = ((or_ln105_5_fu_1903_p2[0:0] == 1'b1) ? select_ln105_4_fu_1875_p3 : 21'd0);

assign grp_fu_1916_p1 = 19'd39;

assign grp_fu_1924_p1 = 19'd39;

assign grp_fu_1932_p1 = 19'd39;

assign grp_fu_1940_p1 = 19'd39;

assign grp_fu_409_p0 = p_read20;

assign grp_fu_409_p2 = ((grp_fu_409_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_1_fu_720_p0 = p_read25;

assign icmp_ln105_1_fu_720_p2 = ((icmp_ln105_1_fu_720_p0 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_2_fu_770_p0 = p_read26;

assign icmp_ln105_2_fu_770_p2 = ((icmp_ln105_2_fu_770_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_3_fu_775_p0 = p_read27;

assign icmp_ln105_3_fu_775_p2 = ((icmp_ln105_3_fu_775_p0 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_4_fu_879_p0 = p_read28;

assign icmp_ln105_4_fu_879_p2 = ((icmp_ln105_4_fu_879_p0 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_5_fu_1349_p0 = p_read29;

assign icmp_ln105_5_fu_1349_p2 = ((icmp_ln105_5_fu_1349_p0 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_414_p0 = p_read20;

assign icmp_ln105_fu_414_p2 = ((icmp_ln105_fu_414_p0 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_1_fu_553_p0 = p_read22;

assign icmp_ln113_1_fu_553_p2 = ((icmp_ln113_1_fu_553_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_2_fu_612_p0 = p_read23;

assign icmp_ln113_2_fu_612_p2 = ((icmp_ln113_2_fu_612_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_4_fu_666_p0 = p_read24;

assign icmp_ln113_4_fu_666_p2 = ((icmp_ln113_4_fu_666_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_6_fu_725_p0 = p_read20;

assign icmp_ln113_6_fu_725_p2 = ((icmp_ln113_6_fu_725_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_484_p0 = p_read21;

assign icmp_ln113_fu_484_p2 = ((icmp_ln113_fu_484_p0 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln117_1_fu_567_p2 = ((sub_ln115_1_fu_563_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_2_fu_627_p2 = ((sub_ln115_2_fu_623_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_3_fu_681_p2 = ((sub_ln115_3_fu_677_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_4_fu_734_p2 = ((sub_ln115_4_fu_730_p2 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_5_fu_792_p2 = ((sub_ln115_5_fu_786_p2 == 5'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_6_fu_849_p2 = ((sub_ln115_6_fu_843_p2 == 5'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_7_fu_893_p2 = ((sub_ln115_7_fu_887_p2 == 5'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_8_fu_1354_p2 = ((p_read18 == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_9_fu_941_p2 = ((sub_ln115_8_fu_935_p2 == 5'd1) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_504_p2 = ((sub_ln115_fu_500_p2 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln120_1_fu_573_p2 = ((sub_ln115_1_fu_563_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln120_2_fu_633_p2 = ((sub_ln115_2_fu_623_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln120_3_fu_687_p2 = ((sub_ln115_3_fu_677_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln120_4_fu_740_p2 = ((sub_ln115_4_fu_730_p2 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln120_5_fu_798_p2 = ((sub_ln115_5_fu_786_p2 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln120_6_fu_855_p2 = ((sub_ln115_6_fu_843_p2 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln120_7_fu_899_p2 = ((sub_ln115_7_fu_887_p2 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln120_8_fu_947_p2 = ((sub_ln115_8_fu_935_p2 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_510_p2 = ((sub_ln115_fu_500_p2 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_953_p2 = ((zext_ln115_reg_2072 == p_read19) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_1369_p2 = ((p_read18 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_957_p2 = ((sub_ln114_fu_923_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_969_p2 = ((and_ln138_3_fu_963_p2 == 5'd31) ? 1'b1 : 1'b0);

assign mul_ln106_fu_456_p1 = 19'd90;

assign mul_ln120_1_fu_1108_p1 = 18'd39;

assign mul_ln120_2_fu_1201_p1 = 18'd39;

assign mul_ln120_3_fu_1278_p1 = 18'd39;

assign mul_ln120_4_fu_1687_p0 = sext_ln106_15_fu_1681_p1;

assign mul_ln120_4_fu_1687_p1 = 18'd39;

assign mul_ln120_fu_985_p1 = 18'd39;

assign mul_ln126_fu_1718_p0 = sext_ln106_14_fu_1678_p1;

assign mul_ln126_fu_1718_p1 = 17'd23;

assign mul_ln136_fu_1758_p0 = sext_ln106_14_fu_1678_p1;

assign mul_ln136_fu_1758_p1 = 17'd131061;

assign or_ln105_1_fu_1569_p2 = (xor_ln105_fu_1189_p2 | and_ln105_fu_1097_p2);

assign or_ln105_2_fu_1575_p2 = (or_ln105_1_fu_1569_p2 | feat_out_0_flag_86_reg_388);

assign or_ln105_3_fu_1891_p2 = (and_ln105_4_fu_1886_p2 | and_ln105_2_fu_1673_p2);

assign or_ln105_4_fu_1897_p2 = (or_ln105_3_fu_1891_p2 | and_ln105_1_fu_1630_p2);

assign or_ln105_5_fu_1903_p2 = (or_ln105_4_fu_1897_p2 | or_ln105_2_reg_2429);

assign or_ln105_fu_1185_p2 = (or_ln138_1_reg_2275 | icmp_ln105_2_reg_2253);

assign or_ln113_1_fu_558_p2 = (xor_ln113_reg_2122 | icmp_ln113_1_fu_553_p2);

assign or_ln113_fu_494_p2 = (xor_ln113_fu_489_p2 | icmp_ln113_fu_484_p2);

assign or_ln117_fu_1397_p2 = (icmp_ln113_6_reg_2215 | and_ln117_8_fu_1359_p2);

assign or_ln120_1_fu_822_p2 = (icmp_ln120_5_fu_798_p2 | icmp_ln117_5_fu_792_p2);

assign or_ln120_2_fu_1268_p2 = (icmp_ln120_6_reg_2287 | icmp_ln117_6_reg_2281);

assign or_ln120_3_fu_1345_p2 = (icmp_ln120_7_reg_2309 | icmp_ln117_7_reg_2303);

assign or_ln120_4_fu_1414_p2 = (or_ln117_fu_1397_p2 | and_ln120_4_fu_1364_p2);

assign or_ln120_fu_1062_p2 = (icmp_ln120_4_reg_2230 | icmp_ln117_4_reg_2224);

assign or_ln123_fu_1432_p2 = (or_ln120_4_fu_1414_p2 | and_ln123_fu_1374_p2);

assign or_ln126_fu_1450_p2 = (or_ln123_fu_1432_p2 | and_ln126_fu_1379_p2);

assign or_ln129_fu_1468_p2 = (or_ln126_fu_1450_p2 | and_ln129_fu_1384_p2);

assign or_ln132_fu_1486_p2 = (or_ln129_fu_1468_p2 | and_ln132_fu_1389_p2);

assign or_ln135_1_fu_1510_p2 = (and_ln129_1_fu_1462_p2 | and_ln126_1_fu_1444_p2);

assign or_ln135_2_fu_1516_p2 = (and_ln123_1_fu_1426_p2 | and_ln120_5_fu_1408_p2);

assign or_ln135_3_fu_1522_p2 = (or_ln135_fu_1504_p2 | or_ln135_1_fu_1510_p2);

assign or_ln135_fu_1504_p2 = (and_ln135_1_fu_1498_p2 | and_ln132_1_fu_1480_p2);

assign or_ln138_10_fu_1563_p2 = (or_ln138_9_fu_1557_p2 | or_ln138_6_fu_1540_p2);

assign or_ln138_11_fu_1862_p2 = (xor_ln138_fu_1857_p2 | icmp_ln113_6_reg_2215);

assign or_ln138_1_fu_834_p2 = (xor_ln120_1_fu_828_p2 | icmp_ln113_6_fu_725_p2);

assign or_ln138_2_fu_1606_p2 = (xor_ln120_2_fu_1601_p2 | icmp_ln113_6_reg_2215);

assign or_ln138_3_fu_1649_p2 = (xor_ln120_3_fu_1644_p2 | icmp_ln113_6_reg_2215);

assign or_ln138_4_fu_1528_p2 = (and_ln135_fu_1393_p2 | and_ln132_fu_1389_p2);

assign or_ln138_5_fu_1534_p2 = (and_ln129_fu_1384_p2 | and_ln126_fu_1379_p2);

assign or_ln138_6_fu_1540_p2 = (or_ln138_5_fu_1534_p2 | or_ln138_4_fu_1528_p2);

assign or_ln138_7_fu_1546_p2 = (and_ln123_fu_1374_p2 | and_ln117_8_fu_1359_p2);

assign or_ln138_8_fu_1552_p2 = (icmp_ln138_reg_2344 | and_ln120_4_fu_1364_p2);

assign or_ln138_9_fu_1557_p2 = (or_ln138_8_fu_1552_p2 | or_ln138_7_fu_1546_p2);

assign or_ln138_fu_1072_p2 = (xor_ln120_fu_1066_p2 | icmp_ln113_6_reg_2215);

assign select_ln105_1_fu_1586_p3 = ((icmp_ln105_2_reg_2253[0:0] == 1'b1) ? select_ln105_reg_2349 : select_ln138_1_fu_1581_p3);

assign select_ln105_2_fu_1623_p3 = ((icmp_ln105_3_reg_2259[0:0] == 1'b1) ? select_ln138_2_fu_1611_p3 : select_ln105_1_fu_1586_p3);

assign select_ln105_3_fu_1666_p3 = ((icmp_ln105_4_reg_2297[0:0] == 1'b1) ? select_ln138_3_fu_1654_p3 : select_ln105_2_fu_1623_p3);

assign select_ln105_4_fu_1875_p3 = ((icmp_ln105_5_reg_2382[0:0] == 1'b1) ? select_ln138_4_fu_1867_p3 : select_ln105_3_fu_1666_p3);

assign select_ln105_fu_1090_p3 = ((icmp_ln105_1_reg_2209[0:0] == 1'b1) ? select_ln138_fu_1077_p3 : sext_ln105_fu_975_p1);

assign select_ln135_10_fu_1807_p3 = ((and_ln123_1_reg_2393[0:0] == 1'b1) ? mul_ln126_fu_1718_p2 : sext_ln123_fu_1710_p1);

assign select_ln135_11_fu_1818_p3 = ((and_ln117_9_fu_1785_p2[0:0] == 1'b1) ? mul_ln120_4_fu_1687_p2 : sext_ln117_3_fu_1781_p1);

assign select_ln135_12_fu_1826_p3 = ((or_ln135_reg_2408[0:0] == 1'b1) ? sext_ln135_8_fu_1796_p1 : select_ln135_9_fu_1800_p3);

assign select_ln135_13_fu_1833_p3 = ((or_ln135_2_reg_2413[0:0] == 1'b1) ? sext_ln135_9_fu_1814_p1 : select_ln135_11_fu_1818_p3);

assign select_ln135_14_fu_1840_p3 = ((or_ln135_3_reg_2418[0:0] == 1'b1) ? select_ln135_12_fu_1826_p3 : select_ln135_13_fu_1833_p3);

assign select_ln135_1_fu_1045_p3 = ((and_ln120_reg_2248[0:0] == 1'b1) ? sext_ln135_fu_1033_p1 : select_ln135_fu_1037_p3);

assign select_ln135_2_fu_1160_p3 = ((and_ln117_2_fu_1152_p2[0:0] == 1'b1) ? mul_ln120_1_fu_1108_p2 : sext_ln117_fu_1148_p1);

assign select_ln135_3_fu_1168_p3 = ((and_ln120_1_reg_2270[0:0] == 1'b1) ? sext_ln135_2_fu_1156_p1 : select_ln135_2_fu_1160_p3);

assign select_ln135_4_fu_1253_p3 = ((and_ln117_4_fu_1245_p2[0:0] == 1'b1) ? mul_ln120_2_fu_1201_p2 : sext_ln117_1_fu_1241_p1);

assign select_ln135_5_fu_1261_p3 = ((and_ln120_2_reg_2292[0:0] == 1'b1) ? sext_ln135_4_fu_1249_p1 : select_ln135_4_fu_1253_p3);

assign select_ln135_6_fu_1330_p3 = ((and_ln117_6_fu_1322_p2[0:0] == 1'b1) ? mul_ln120_3_fu_1278_p2 : sext_ln117_2_fu_1318_p1);

assign select_ln135_7_fu_1338_p3 = ((and_ln120_3_reg_2314[0:0] == 1'b1) ? sext_ln135_6_fu_1326_p1 : select_ln135_6_fu_1330_p3);

assign select_ln135_8_fu_1789_p3 = ((and_ln135_1_reg_2403[0:0] == 1'b1) ? mul_ln136_fu_1758_p2 : sub_ln133_fu_1752_p2);

assign select_ln135_9_fu_1800_p3 = ((and_ln129_1_reg_2398[0:0] == 1'b1) ? sext_ln123_1_fu_1714_p1 : sub_ln127_fu_1735_p2);

assign select_ln135_fu_1037_p3 = ((and_ln117_fu_1029_p2[0:0] == 1'b1) ? mul_ln120_fu_985_p2 : sext_ln113_1_fu_1025_p1);

assign select_ln138_1_fu_1581_p3 = ((or_ln138_1_reg_2275[0:0] == 1'b1) ? select_ln105_reg_2349 : add_ln135_1_reg_2355);

assign select_ln138_2_fu_1611_p3 = ((or_ln138_2_fu_1606_p2[0:0] == 1'b1) ? select_ln105_1_fu_1586_p3 : add_ln135_2_fu_1595_p2);

assign select_ln138_3_fu_1654_p3 = ((or_ln138_3_fu_1649_p2[0:0] == 1'b1) ? select_ln105_2_fu_1623_p3 : add_ln135_3_fu_1638_p2);

assign select_ln138_4_fu_1867_p3 = ((or_ln138_11_fu_1862_p2[0:0] == 1'b1) ? select_ln105_3_fu_1666_p3 : add_ln135_4_fu_1851_p2);

assign select_ln138_fu_1077_p3 = ((or_ln138_fu_1072_p2[0:0] == 1'b1) ? sext_ln105_fu_975_p1 : add_ln135_fu_1056_p2);

assign sext_ln105_fu_975_p1 = $signed(feat_out_0_loc_76_reg_370);

assign sext_ln106_11_fu_1198_p0 = p_read27;

assign sext_ln106_11_fu_1198_p1 = sext_ln106_11_fu_1198_p0;

assign sext_ln106_13_fu_1275_p0 = p_read28;

assign sext_ln106_13_fu_1275_p1 = sext_ln106_13_fu_1275_p0;

assign sext_ln106_14_fu_1678_p0 = p_read29;

assign sext_ln106_14_fu_1678_p1 = sext_ln106_14_fu_1678_p0;

assign sext_ln106_15_fu_1681_p0 = p_read29;

assign sext_ln106_15_fu_1681_p1 = sext_ln106_15_fu_1681_p0;

assign sext_ln106_16_fu_1684_p0 = p_read29;

assign sext_ln106_16_fu_1684_p1 = sext_ln106_16_fu_1684_p0;

assign sext_ln106_1_fu_444_p1 = $signed(p_read11);

assign sext_ln106_2_fu_617_p0 = p_read23;

assign sext_ln106_2_fu_617_p1 = sext_ln106_2_fu_617_p0;

assign sext_ln106_4_fu_671_p0 = p_read24;

assign sext_ln106_4_fu_671_p1 = sext_ln106_4_fu_671_p0;

assign sext_ln106_7_fu_982_p0 = p_read25;

assign sext_ln106_7_fu_982_p1 = sext_ln106_7_fu_982_p0;

assign sext_ln106_9_fu_1105_p0 = p_read26;

assign sext_ln106_9_fu_1105_p1 = sext_ln106_9_fu_1105_p0;

assign sext_ln113_1_fu_1025_p1 = $signed(sub_ln139_fu_1019_p2);

assign sext_ln113_fu_480_p1 = feat_out_0_loc_78_reg_236;

assign sext_ln115_fu_928_p1 = sub_ln114_fu_923_p2;

assign sext_ln117_1_fu_1241_p1 = $signed(sub_ln139_2_fu_1235_p2);

assign sext_ln117_2_fu_1318_p1 = $signed(sub_ln139_3_fu_1312_p2);

assign sext_ln117_3_fu_1781_p1 = $signed(sub_ln139_4_fu_1775_p2);

assign sext_ln117_fu_1148_p1 = $signed(sub_ln139_1_fu_1142_p2);

assign sext_ln121_10_fu_998_p1 = $signed(shl_ln121_4_fu_991_p3);

assign sext_ln121_11_fu_1121_p1 = $signed(shl_ln121_5_fu_1114_p3);

assign sext_ln121_12_fu_1214_p1 = $signed(shl_ln121_6_fu_1207_p3);

assign sext_ln121_13_fu_1291_p1 = $signed(shl_ln121_7_fu_1284_p3);

assign sext_ln121_14_fu_1700_p1 = $signed(shl_ln121_8_fu_1693_p3);

assign sext_ln121_1_fu_526_p1 = $signed(shl_ln_fu_519_p3);

assign sext_ln121_2_fu_536_p1 = $signed(sub_ln121_fu_530_p2);

assign sext_ln121_3_fu_579_p0 = p_read22;

assign sext_ln121_3_fu_579_p1 = sext_ln121_3_fu_579_p0;

assign sext_ln121_4_fu_589_p1 = $signed(shl_ln121_1_fu_582_p3);

assign sext_ln121_5_fu_599_p1 = $signed(sub_ln121_1_fu_593_p2);

assign sext_ln121_6_fu_646_p1 = $signed(shl_ln121_2_fu_639_p3);

assign sext_ln121_7_fu_656_p1 = $signed(sub_ln121_2_fu_650_p2);

assign sext_ln121_8_fu_700_p1 = $signed(shl_ln121_3_fu_693_p3);

assign sext_ln121_9_fu_710_p1 = $signed(sub_ln121_3_fu_704_p2);

assign sext_ln121_fu_516_p0 = p_read21;

assign sext_ln121_fu_516_p1 = sext_ln121_fu_516_p0;

assign sext_ln122_fu_546_p1 = $signed(add_ln121_fu_540_p2);

assign sext_ln123_1_fu_1714_p1 = sub_ln121_8_fu_1704_p2;

assign sext_ln123_fu_1710_p1 = sub_ln121_8_fu_1704_p2;

assign sext_ln127_fu_1731_p1 = $signed(shl_ln127_8_fu_1724_p3);

assign sext_ln133_fu_1748_p1 = $signed(shl_ln133_8_fu_1741_p3);

assign sext_ln135_10_fu_1847_p1 = $signed(select_ln135_14_fu_1840_p3);

assign sext_ln135_1_fu_1052_p1 = $signed(select_ln135_1_fu_1045_p3);

assign sext_ln135_2_fu_1156_p1 = $signed(sub_ln121_5_fu_1125_p2);

assign sext_ln135_3_fu_1175_p1 = $signed(select_ln135_3_fu_1168_p3);

assign sext_ln135_4_fu_1249_p1 = $signed(sub_ln121_6_fu_1218_p2);

assign sext_ln135_5_fu_1592_p1 = $signed(select_ln135_5_reg_2360);

assign sext_ln135_6_fu_1326_p1 = $signed(sub_ln121_7_fu_1295_p2);

assign sext_ln135_7_fu_1635_p1 = $signed(select_ln135_7_reg_2371);

assign sext_ln135_8_fu_1796_p1 = $signed(select_ln135_8_fu_1789_p3);

assign sext_ln135_9_fu_1814_p1 = $signed(select_ln135_10_fu_1807_p3);

assign sext_ln135_fu_1033_p1 = $signed(sub_ln121_4_fu_1002_p2);

assign sext_ln139_1_fu_1138_p1 = $signed(shl_ln139_5_fu_1131_p3);

assign sext_ln139_2_fu_1231_p1 = $signed(shl_ln139_6_fu_1224_p3);

assign sext_ln139_3_fu_1308_p1 = $signed(shl_ln139_7_fu_1301_p3);

assign sext_ln139_4_fu_1771_p1 = $signed(shl_ln139_8_fu_1764_p3);

assign sext_ln139_fu_1015_p1 = $signed(shl_ln139_4_fu_1008_p3);

assign shl_ln121_1_fu_582_p1 = p_read22;

assign shl_ln121_1_fu_582_p3 = {{shl_ln121_1_fu_582_p1}, {2'd0}};

assign shl_ln121_2_fu_639_p1 = p_read23;

assign shl_ln121_2_fu_639_p3 = {{shl_ln121_2_fu_639_p1}, {2'd0}};

assign shl_ln121_3_fu_693_p1 = p_read24;

assign shl_ln121_3_fu_693_p3 = {{shl_ln121_3_fu_693_p1}, {2'd0}};

assign shl_ln121_4_fu_991_p1 = p_read25;

assign shl_ln121_4_fu_991_p3 = {{shl_ln121_4_fu_991_p1}, {2'd0}};

assign shl_ln121_5_fu_1114_p1 = p_read26;

assign shl_ln121_5_fu_1114_p3 = {{shl_ln121_5_fu_1114_p1}, {2'd0}};

assign shl_ln121_6_fu_1207_p1 = p_read27;

assign shl_ln121_6_fu_1207_p3 = {{shl_ln121_6_fu_1207_p1}, {2'd0}};

assign shl_ln121_7_fu_1284_p1 = p_read28;

assign shl_ln121_7_fu_1284_p3 = {{shl_ln121_7_fu_1284_p1}, {2'd0}};

assign shl_ln121_8_fu_1693_p1 = p_read29;

assign shl_ln121_8_fu_1693_p3 = {{shl_ln121_8_fu_1693_p1}, {2'd0}};

assign shl_ln127_8_fu_1724_p1 = p_read29;

assign shl_ln127_8_fu_1724_p3 = {{shl_ln127_8_fu_1724_p1}, {5'd0}};

assign shl_ln133_8_fu_1741_p1 = p_read29;

assign shl_ln133_8_fu_1741_p3 = {{shl_ln133_8_fu_1741_p1}, {4'd0}};

assign shl_ln139_4_fu_1008_p1 = p_read25;

assign shl_ln139_4_fu_1008_p3 = {{shl_ln139_4_fu_1008_p1}, {1'd0}};

assign shl_ln139_5_fu_1131_p1 = p_read26;

assign shl_ln139_5_fu_1131_p3 = {{shl_ln139_5_fu_1131_p1}, {1'd0}};

assign shl_ln139_6_fu_1224_p1 = p_read27;

assign shl_ln139_6_fu_1224_p3 = {{shl_ln139_6_fu_1224_p1}, {1'd0}};

assign shl_ln139_7_fu_1301_p1 = p_read28;

assign shl_ln139_7_fu_1301_p3 = {{shl_ln139_7_fu_1301_p1}, {1'd0}};

assign shl_ln139_8_fu_1764_p1 = p_read29;

assign shl_ln139_8_fu_1764_p3 = {{shl_ln139_8_fu_1764_p1}, {1'd0}};

assign shl_ln_fu_519_p1 = p_read21;

assign shl_ln_fu_519_p3 = {{shl_ln_fu_519_p1}, {2'd0}};

assign sub_ln114_fu_923_p2 = (2'd1 - p_read18);

assign sub_ln115_1_fu_563_p2 = (zext_ln115_reg_2072 - zext_ln106_1_reg_2091);

assign sub_ln115_2_fu_623_p2 = (zext_ln115_reg_2072 - zext_ln106_2_reg_2096);

assign sub_ln115_3_fu_677_p2 = (zext_ln115_reg_2072 - zext_ln106_3_reg_2101);

assign sub_ln115_4_fu_730_p2 = (zext_ln115_reg_2072 - zext_ln106_4_reg_2106);

assign sub_ln115_5_fu_786_p2 = (zext_ln115_2_fu_780_p1 - zext_ln115_3_fu_783_p1);

assign sub_ln115_6_fu_843_p2 = (zext_ln115_2_fu_780_p1 - zext_ln115_4_fu_840_p1);

assign sub_ln115_7_fu_887_p2 = (zext_ln115_2_fu_780_p1 - zext_ln115_5_fu_884_p1);

assign sub_ln115_8_fu_935_p2 = (zext_ln115_2_fu_780_p1 - zext_ln115_6_fu_932_p1);

assign sub_ln115_fu_500_p2 = (zext_ln115_1_reg_2081 - zext_ln106_reg_2086);

assign sub_ln121_1_fu_593_p2 = ($signed(sext_ln121_4_fu_589_p1) - $signed(sext_ln121_3_fu_579_p1));

assign sub_ln121_2_fu_650_p2 = ($signed(sext_ln121_6_fu_646_p1) - $signed(sext_ln106_2_fu_617_p1));

assign sub_ln121_3_fu_704_p2 = ($signed(sext_ln121_8_fu_700_p1) - $signed(sext_ln106_4_fu_671_p1));

assign sub_ln121_4_fu_1002_p2 = ($signed(sext_ln121_10_fu_998_p1) - $signed(sext_ln106_7_fu_982_p1));

assign sub_ln121_5_fu_1125_p2 = ($signed(sext_ln121_11_fu_1121_p1) - $signed(sext_ln106_9_fu_1105_p1));

assign sub_ln121_6_fu_1218_p2 = ($signed(sext_ln121_12_fu_1214_p1) - $signed(sext_ln106_11_fu_1198_p1));

assign sub_ln121_7_fu_1295_p2 = ($signed(sext_ln121_13_fu_1291_p1) - $signed(sext_ln106_13_fu_1275_p1));

assign sub_ln121_8_fu_1704_p2 = ($signed(sext_ln121_14_fu_1700_p1) - $signed(sext_ln106_16_fu_1684_p1));

assign sub_ln121_fu_530_p2 = ($signed(sext_ln121_1_fu_526_p1) - $signed(sext_ln121_fu_516_p1));

assign sub_ln127_fu_1735_p2 = ($signed(sext_ln106_15_fu_1681_p1) - $signed(sext_ln127_fu_1731_p1));

assign sub_ln133_fu_1752_p2 = ($signed(sext_ln133_fu_1748_p1) - $signed(sext_ln106_14_fu_1678_p1));

assign sub_ln139_1_fu_1142_p2 = ($signed(14'd0) - $signed(sext_ln139_1_fu_1138_p1));

assign sub_ln139_2_fu_1235_p2 = ($signed(14'd0) - $signed(sext_ln139_2_fu_1231_p1));

assign sub_ln139_3_fu_1312_p2 = ($signed(14'd0) - $signed(sext_ln139_3_fu_1308_p1));

assign sub_ln139_4_fu_1775_p2 = ($signed(14'd0) - $signed(sext_ln139_4_fu_1771_p1));

assign sub_ln139_fu_1019_p2 = ($signed(14'd0) - $signed(sext_ln139_fu_1015_p1));

assign tmp_1_fu_462_p4 = {{mul_ln106_fu_456_p2[18:1]}};

assign xor_ln105_fu_1189_p2 = (or_ln105_fu_1185_p2 ^ 1'd1);

assign xor_ln113_1_fu_746_p2 = (icmp_ln113_6_fu_725_p2 ^ 1'd1);

assign xor_ln113_fu_489_p2 = (icmp_ln105_reg_2067 ^ 1'd1);

assign xor_ln117_1_fu_804_p2 = (icmp_ln117_5_fu_792_p2 ^ 1'd1);

assign xor_ln117_2_fu_861_p2 = (icmp_ln117_6_fu_849_p2 ^ 1'd1);

assign xor_ln117_3_fu_905_p2 = (icmp_ln117_7_fu_893_p2 ^ 1'd1);

assign xor_ln117_4_fu_1402_p2 = (or_ln117_fu_1397_p2 ^ 1'd1);

assign xor_ln117_fu_752_p2 = (icmp_ln117_4_fu_734_p2 ^ 1'd1);

assign xor_ln120_1_fu_828_p2 = (or_ln120_1_fu_822_p2 ^ 1'd1);

assign xor_ln120_2_fu_1601_p2 = (or_ln120_2_reg_2365 ^ 1'd1);

assign xor_ln120_3_fu_1644_p2 = (or_ln120_3_reg_2376 ^ 1'd1);

assign xor_ln120_4_fu_1420_p2 = (or_ln120_4_fu_1414_p2 ^ 1'd1);

assign xor_ln120_fu_1066_p2 = (or_ln120_fu_1062_p2 ^ 1'd1);

assign xor_ln123_fu_1438_p2 = (or_ln123_fu_1432_p2 ^ 1'd1);

assign xor_ln126_fu_1456_p2 = (or_ln126_fu_1450_p2 ^ 1'd1);

assign xor_ln129_fu_1474_p2 = (or_ln129_fu_1468_p2 ^ 1'd1);

assign xor_ln132_fu_1492_p2 = (or_ln132_fu_1486_p2 ^ 1'd1);

assign xor_ln138_fu_1857_p2 = (or_ln138_10_reg_2423 ^ 1'd1);

assign zext_ln106_1_fu_432_p1 = p_read5;

assign zext_ln106_2_fu_436_p1 = p_read7;

assign zext_ln106_3_fu_440_p1 = p_read9;

assign zext_ln106_4_fu_448_p1 = $unsigned(sext_ln106_1_fu_444_p1);

assign zext_ln106_fu_428_p1 = p_read3;

assign zext_ln115_1_fu_424_p1 = p_read1;

assign zext_ln115_2_fu_780_p1 = p_read1;

assign zext_ln115_3_fu_783_p1 = p_read13;

assign zext_ln115_4_fu_840_p1 = p_read15;

assign zext_ln115_5_fu_884_p1 = p_read17;

assign zext_ln115_6_fu_932_p1 = p_read19;

assign zext_ln115_fu_420_p1 = p_read1;

always @ (posedge ap_clk) begin
    zext_ln115_reg_2072[3:2] <= 2'b00;
    zext_ln115_1_reg_2081[2] <= 1'b0;
    zext_ln106_reg_2086[2] <= 1'b0;
    zext_ln106_1_reg_2091[3] <= 1'b0;
    zext_ln106_2_reg_2096[3] <= 1'b0;
    zext_ln106_3_reg_2101[3] <= 1'b0;
    zext_ln106_4_reg_2106[3] <= 1'b0;
    feat_out_0_loc_78_reg_236[0] <= 1'b0;
end

endmodule //model_test_sparse_compute
