// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module model_test_sparse_input (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x_in,
        x_in_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [1199:0] x_in;
input   x_in_ap_vld;
output  [1:0] ap_return_0;
output  [1:0] ap_return_1;
output  [2:0] ap_return_2;
output  [2:0] ap_return_3;
output  [2:0] ap_return_4;
output  [1:0] ap_return_5;
output  [3:0] ap_return_6;
output  [3:0] ap_return_7;
output  [3:0] ap_return_8;
output  [1:0] ap_return_9;
output  [3:0] ap_return_10;
output  [11:0] ap_return_11;
output  [11:0] ap_return_12;
output  [11:0] ap_return_13;
output  [11:0] ap_return_14;
output  [11:0] ap_return_15;
output  [11:0] ap_return_16;
output  [11:0] ap_return_17;
output  [11:0] ap_return_18;
output  [11:0] ap_return_19;
output  [11:0] ap_return_20;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] ap_return_0;
reg[1:0] ap_return_1;
reg[2:0] ap_return_2;
reg[2:0] ap_return_3;
reg[2:0] ap_return_4;
reg[1:0] ap_return_5;
reg[3:0] ap_return_6;
reg[3:0] ap_return_7;
reg[3:0] ap_return_8;
reg[1:0] ap_return_9;
reg[3:0] ap_return_10;
reg[11:0] ap_return_11;
reg[11:0] ap_return_12;
reg[11:0] ap_return_13;
reg[11:0] ap_return_14;
reg[11:0] ap_return_15;
reg[11:0] ap_return_16;
reg[11:0] ap_return_17;
reg[11:0] ap_return_18;
reg[11:0] ap_return_19;
reg[11:0] ap_return_20;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    x_in_blk_n;
reg    ap_block_state1;
wire   [11:0] trunc_ln60_fu_80_p1;
wire   [0:0] icmp_ln60_fu_84_p2;
wire   [11:0] tmp_s_fu_90_p4;
wire   [11:0] tmp_1_fu_100_p4;
wire   [11:0] tmp_2_fu_110_p4;
wire   [11:0] tmp_3_fu_120_p4;
wire   [11:0] tmp_4_fu_130_p4;
wire   [11:0] tmp_5_fu_140_p4;
wire   [11:0] tmp_6_fu_150_p4;
wire   [11:0] tmp_7_fu_160_p4;
wire   [11:0] tmp_8_fu_170_p4;
wire   [11:0] tmp_9_fu_180_p4;
wire   [1:0] select_ln83_2_fu_206_p3;
wire   [1:0] select_ln83_1_fu_198_p3;
wire   [2:0] select_ln83_4_fu_222_p3;
wire   [2:0] select_ln83_6_fu_238_p3;
wire   [2:0] select_ln83_8_fu_254_p3;
wire   [3:0] select_ln83_11_fu_278_p3;
wire   [3:0] select_ln83_13_fu_294_p3;
wire   [3:0] select_ln83_15_fu_310_p3;
wire   [3:0] select_ln83_17_fu_326_p3;
wire   [11:0] select_ln83_fu_190_p3;
wire   [11:0] select_ln83_3_fu_214_p3;
wire   [11:0] select_ln83_5_fu_230_p3;
wire   [11:0] select_ln83_7_fu_246_p3;
wire   [11:0] select_ln83_9_fu_262_p3;
wire   [11:0] select_ln83_10_fu_270_p3;
wire   [11:0] select_ln83_12_fu_286_p3;
wire   [11:0] select_ln83_14_fu_302_p3;
wire   [11:0] select_ln83_16_fu_318_p3;
wire   [11:0] select_ln83_18_fu_334_p3;
reg   [1:0] ap_return_0_preg;
reg   [1:0] ap_return_1_preg;
reg   [2:0] ap_return_2_preg;
reg   [2:0] ap_return_3_preg;
reg   [2:0] ap_return_4_preg;
reg   [1:0] ap_return_5_preg;
reg   [3:0] ap_return_6_preg;
reg   [3:0] ap_return_7_preg;
reg   [3:0] ap_return_8_preg;
reg   [1:0] ap_return_9_preg;
reg   [3:0] ap_return_10_preg;
reg   [11:0] ap_return_11_preg;
reg   [11:0] ap_return_12_preg;
reg   [11:0] ap_return_13_preg;
reg   [11:0] ap_return_14_preg;
reg   [11:0] ap_return_15_preg;
reg   [11:0] ap_return_16_preg;
reg   [11:0] ap_return_17_preg;
reg   [11:0] ap_return_18_preg;
reg   [11:0] ap_return_19_preg;
reg   [11:0] ap_return_20_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_return_0_preg = 2'd0;
#0 ap_return_1_preg = 2'd0;
#0 ap_return_2_preg = 3'd0;
#0 ap_return_3_preg = 3'd0;
#0 ap_return_4_preg = 3'd0;
#0 ap_return_5_preg = 2'd0;
#0 ap_return_6_preg = 4'd0;
#0 ap_return_7_preg = 4'd0;
#0 ap_return_8_preg = 4'd0;
#0 ap_return_9_preg = 2'd0;
#0 ap_return_10_preg = 4'd0;
#0 ap_return_11_preg = 12'd0;
#0 ap_return_12_preg = 12'd0;
#0 ap_return_13_preg = 12'd0;
#0 ap_return_14_preg = 12'd0;
#0 ap_return_15_preg = 12'd0;
#0 ap_return_16_preg = 12'd0;
#0 ap_return_17_preg = 12'd0;
#0 ap_return_18_preg = 12'd0;
#0 ap_return_19_preg = 12'd0;
#0 ap_return_20_preg = 12'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_0_preg <= select_ln83_2_fu_206_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_10_preg[0] <= 1'b0;
        ap_return_10_preg[1] <= 1'b0;
        ap_return_10_preg[3] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_10_preg[1 : 0] <= select_ln83_17_fu_326_p3[1 : 0];
            ap_return_10_preg[3] <= select_ln83_17_fu_326_p3[3];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_11_preg <= select_ln83_fu_190_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_12_preg <= select_ln83_3_fu_214_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_13_preg <= select_ln83_5_fu_230_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_14_preg <= select_ln83_7_fu_246_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_15_preg <= select_ln83_9_fu_262_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_16_preg <= select_ln83_10_fu_270_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_17_preg <= select_ln83_12_fu_286_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_18_preg <= select_ln83_14_fu_302_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_19_preg <= select_ln83_16_fu_318_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_1_preg <= select_ln83_1_fu_198_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 12'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_20_preg <= select_ln83_18_fu_334_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_2_preg <= select_ln83_4_fu_222_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_3_preg[0] <= 1'b0;
        ap_return_3_preg[2] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_3_preg[0] <= select_ln83_6_fu_238_p3[0];
            ap_return_3_preg[2] <= select_ln83_6_fu_238_p3[2];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 3'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_4_preg <= select_ln83_8_fu_254_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_5_preg <= select_ln83_1_fu_198_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 4'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_6_preg <= select_ln83_11_fu_278_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_7_preg[0] <= 1'b0;
        ap_return_7_preg[3] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_7_preg[0] <= select_ln83_13_fu_294_p3[0];
            ap_return_7_preg[3] <= select_ln83_13_fu_294_p3[3];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_8_preg[0] <= 1'b0;
        ap_return_8_preg[1] <= 1'b0;
        ap_return_8_preg[3] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        ap_return_8_preg[1 : 0] <= select_ln83_15_fu_310_p3[1 : 0];
            ap_return_8_preg[3] <= select_ln83_15_fu_310_p3[3];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 2'd0;
    end else begin
        if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_return_9_preg <= select_ln83_2_fu_206_p3;
        end
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_0 = select_ln83_2_fu_206_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_1 = select_ln83_1_fu_198_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_10 = select_ln83_17_fu_326_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_11 = select_ln83_fu_190_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_12 = select_ln83_3_fu_214_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_13 = select_ln83_5_fu_230_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_14 = select_ln83_7_fu_246_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_15 = select_ln83_9_fu_262_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_16 = select_ln83_10_fu_270_p3;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_17 = select_ln83_12_fu_286_p3;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_18 = select_ln83_14_fu_302_p3;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_19 = select_ln83_16_fu_318_p3;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_2 = select_ln83_4_fu_222_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_20 = select_ln83_18_fu_334_p3;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_3 = select_ln83_6_fu_238_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_4 = select_ln83_8_fu_254_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_5 = select_ln83_1_fu_198_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_6 = select_ln83_11_fu_278_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_7 = select_ln83_13_fu_294_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_8 = select_ln83_15_fu_310_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_return_9 = select_ln83_2_fu_206_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        x_in_blk_n = x_in_ap_vld;
    end else begin
        x_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (x_in_ap_vld == 1'b0) | (ap_done_reg == 1'b1));
end

assign icmp_ln60_fu_84_p2 = ((trunc_ln60_fu_80_p1 == 12'd0) ? 1'b1 : 1'b0);

assign select_ln83_10_fu_270_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_5_fu_140_p4 : tmp_4_fu_130_p4);

assign select_ln83_11_fu_278_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 4'd8 : 4'd7);

assign select_ln83_12_fu_286_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_6_fu_150_p4 : tmp_5_fu_140_p4);

assign select_ln83_13_fu_294_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 4'd9 : 4'd8);

assign select_ln83_14_fu_302_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_7_fu_160_p4 : tmp_6_fu_150_p4);

assign select_ln83_15_fu_310_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 4'd10 : 4'd9);

assign select_ln83_16_fu_318_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_8_fu_170_p4 : tmp_7_fu_160_p4);

assign select_ln83_17_fu_326_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 4'd1 : 4'd10);

assign select_ln83_18_fu_334_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_9_fu_180_p4 : tmp_8_fu_170_p4);

assign select_ln83_1_fu_198_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign select_ln83_2_fu_206_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign select_ln83_3_fu_214_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_1_fu_100_p4 : tmp_s_fu_90_p4);

assign select_ln83_4_fu_222_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 3'd4 : 3'd3);

assign select_ln83_5_fu_230_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_2_fu_110_p4 : tmp_1_fu_100_p4);

assign select_ln83_6_fu_238_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln83_7_fu_246_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_3_fu_120_p4 : tmp_2_fu_110_p4);

assign select_ln83_8_fu_254_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? 3'd6 : 3'd5);

assign select_ln83_9_fu_262_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_4_fu_130_p4 : tmp_3_fu_120_p4);

assign select_ln83_fu_190_p3 = ((icmp_ln60_fu_84_p2[0:0] == 1'b1) ? tmp_s_fu_90_p4 : trunc_ln60_fu_80_p1);

assign tmp_1_fu_100_p4 = {{x_in[35:24]}};

assign tmp_2_fu_110_p4 = {{x_in[47:36]}};

assign tmp_3_fu_120_p4 = {{x_in[59:48]}};

assign tmp_4_fu_130_p4 = {{x_in[71:60]}};

assign tmp_5_fu_140_p4 = {{x_in[83:72]}};

assign tmp_6_fu_150_p4 = {{x_in[95:84]}};

assign tmp_7_fu_160_p4 = {{x_in[107:96]}};

assign tmp_8_fu_170_p4 = {{x_in[119:108]}};

assign tmp_9_fu_180_p4 = {{x_in[131:120]}};

assign tmp_s_fu_90_p4 = {{x_in[23:12]}};

assign trunc_ln60_fu_80_p1 = x_in[11:0];

always @ (posedge ap_clk) begin
    ap_return_3_preg[1] <= 1'b0;
    ap_return_7_preg[2:1] <= 2'b00;
    ap_return_8_preg[2] <= 1'b0;
    ap_return_10_preg[2] <= 1'b0;
end

endmodule //model_test_sparse_input
