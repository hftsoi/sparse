// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_HH_
#define _softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_exp_table1.h"
#include "softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_invert_table2.h"

namespace ap_rtl {

struct softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<22> > data_0_V_read;
    sc_in< sc_lv<22> > data_1_V_read;
    sc_in< sc_lv<22> > data_2_V_read;
    sc_in< sc_lv<22> > data_3_V_read;
    sc_in< sc_lv<22> > data_4_V_read;
    sc_out< sc_lv<16> > res_0_V;
    sc_out< sc_logic > res_0_V_ap_vld;
    sc_out< sc_lv<16> > res_1_V;
    sc_out< sc_logic > res_1_V_ap_vld;
    sc_out< sc_lv<16> > res_2_V;
    sc_out< sc_logic > res_2_V_ap_vld;
    sc_out< sc_lv<16> > res_3_V;
    sc_out< sc_logic > res_3_V_ap_vld;
    sc_out< sc_lv<16> > res_4_V;
    sc_out< sc_logic > res_4_V_ap_vld;


    // Module declarations
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s);

    ~softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s();

    sc_trace_file* mVcdFile;

    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_exp_table1* exp_table1_U;
    softmax_stable_ap_fixed_ap_fixed_16_6_5_3_0_Softmax_config18_s_invert_table2* invert_table2_U;
    hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1<1,1,18,17,26>* hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1_U4793;
    hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1<1,1,18,17,26>* hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1_U4794;
    hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1<1,1,18,17,26>* hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1_U4795;
    hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1<1,1,18,17,26>* hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1_U4796;
    hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1<1,1,18,17,26>* hls_deepset_pointwisePhi_ioparallel_mul_mul_18s_17ns_26_1_1_U4797;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table1_address0;
    sc_signal< sc_logic > exp_table1_ce0;
    sc_signal< sc_lv<17> > exp_table1_q0;
    sc_signal< sc_lv<10> > exp_table1_address1;
    sc_signal< sc_logic > exp_table1_ce1;
    sc_signal< sc_lv<17> > exp_table1_q1;
    sc_signal< sc_lv<10> > exp_table1_address2;
    sc_signal< sc_logic > exp_table1_ce2;
    sc_signal< sc_lv<17> > exp_table1_q2;
    sc_signal< sc_lv<10> > exp_table1_address3;
    sc_signal< sc_logic > exp_table1_ce3;
    sc_signal< sc_lv<17> > exp_table1_q3;
    sc_signal< sc_lv<10> > exp_table1_address4;
    sc_signal< sc_logic > exp_table1_ce4;
    sc_signal< sc_lv<17> > exp_table1_q4;
    sc_signal< sc_lv<10> > invert_table2_address0;
    sc_signal< sc_logic > invert_table2_ce0;
    sc_signal< sc_lv<18> > invert_table2_q0;
    sc_signal< sc_lv<1> > tmp_1_reg_1072;
    sc_signal< sc_lv<1> > tmp_3_reg_1079;
    sc_signal< sc_lv<1> > tmp_5_reg_1086;
    sc_signal< sc_lv<1> > tmp_7_reg_1093;
    sc_signal< sc_lv<1> > tmp_9_reg_1100;
    sc_signal< sc_lv<1> > tmp_10_reg_1107;
    sc_signal< sc_lv<1> > tmp_11_reg_1114;
    sc_signal< sc_lv<1> > tmp_12_reg_1121;
    sc_signal< sc_lv<1> > tmp_13_reg_1128;
    sc_signal< sc_lv<1> > tmp_14_reg_1135;
    sc_signal< sc_lv<10> > tmp_reg_1142;
    sc_signal< sc_lv<10> > tmp_2_reg_1148;
    sc_signal< sc_lv<10> > tmp_4_reg_1154;
    sc_signal< sc_lv<10> > tmp_6_reg_1160;
    sc_signal< sc_lv<10> > tmp_8_reg_1166;
    sc_signal< sc_lv<10> > y_V_4_fu_699_p3;
    sc_signal< sc_lv<10> > y_V_4_reg_1192;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_1197;
    sc_signal< sc_lv<17> > exp_res_0_V_reg_1197_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_1202;
    sc_signal< sc_lv<17> > exp_res_1_V_reg_1202_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_1207;
    sc_signal< sc_lv<17> > exp_res_2_V_reg_1207_pp0_iter3_reg;
    sc_signal< sc_lv<17> > exp_res_3_V_reg_1212;
    sc_signal< sc_lv<17> > exp_res_3_V_reg_1212_pp0_iter3_reg;
    sc_signal< sc_lv<18> > p_Val2_16_fu_853_p3;
    sc_signal< sc_lv<18> > p_Val2_16_reg_1222;
    sc_signal< sc_lv<17> > exp_res_4_V_reg_1228;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln255_fu_599_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln255_1_fu_626_p1;
    sc_signal< sc_lv<64> > zext_ln255_2_fu_653_p1;
    sc_signal< sc_lv<64> > zext_ln255_3_fu_680_p1;
    sc_signal< sc_lv<64> > zext_ln255_4_fu_707_p1;
    sc_signal< sc_lv<64> > zext_ln265_fu_963_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<22> > icmp_ln1496_fu_217_p0;
    sc_signal< sc_lv<22> > icmp_ln1496_fu_217_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_217_p2;
    sc_signal< sc_lv<22> > select_ln65_fu_223_p1;
    sc_signal< sc_lv<22> > select_ln65_fu_223_p2;
    sc_signal< sc_lv<22> > icmp_ln1496_1_fu_231_p0;
    sc_signal< sc_lv<22> > icmp_ln1496_1_fu_231_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_231_p2;
    sc_signal< sc_lv<22> > select_ln65_1_fu_237_p1;
    sc_signal< sc_lv<22> > select_ln65_1_fu_237_p2;
    sc_signal< sc_lv<22> > select_ln65_fu_223_p3;
    sc_signal< sc_lv<22> > select_ln65_1_fu_237_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_245_p2;
    sc_signal< sc_lv<22> > select_ln65_2_fu_251_p3;
    sc_signal< sc_lv<22> > icmp_ln1496_3_fu_259_p1;
    sc_signal< sc_lv<1> > icmp_ln1496_3_fu_259_p2;
    sc_signal< sc_lv<22> > x_max_V_fu_265_p1;
    sc_signal< sc_lv<22> > sext_ln703_fu_273_p0;
    sc_signal< sc_lv<22> > x_max_V_fu_265_p3;
    sc_signal< sc_lv<23> > sext_ln703_fu_273_p1;
    sc_signal< sc_lv<23> > sext_ln703_1_fu_277_p1;
    sc_signal< sc_lv<23> > sub_ln1193_fu_281_p2;
    sc_signal< sc_lv<22> > sext_ln703_2_fu_303_p0;
    sc_signal< sc_lv<23> > sext_ln703_2_fu_303_p1;
    sc_signal< sc_lv<23> > sub_ln1193_1_fu_307_p2;
    sc_signal< sc_lv<22> > sext_ln703_3_fu_329_p0;
    sc_signal< sc_lv<23> > sext_ln703_3_fu_329_p1;
    sc_signal< sc_lv<23> > sub_ln1193_2_fu_333_p2;
    sc_signal< sc_lv<22> > sext_ln703_4_fu_355_p0;
    sc_signal< sc_lv<23> > sext_ln703_4_fu_355_p1;
    sc_signal< sc_lv<23> > sub_ln1193_3_fu_359_p2;
    sc_signal< sc_lv<22> > sext_ln703_5_fu_381_p0;
    sc_signal< sc_lv<23> > sext_ln703_5_fu_381_p1;
    sc_signal< sc_lv<23> > sub_ln1193_4_fu_385_p2;
    sc_signal< sc_lv<1> > xor_ln786_fu_457_p2;
    sc_signal< sc_lv<1> > xor_ln340_fu_471_p2;
    sc_signal< sc_lv<1> > xor_ln786_1_fu_481_p2;
    sc_signal< sc_lv<1> > xor_ln340_1_fu_495_p2;
    sc_signal< sc_lv<1> > xor_ln786_2_fu_505_p2;
    sc_signal< sc_lv<1> > xor_ln340_2_fu_519_p2;
    sc_signal< sc_lv<1> > xor_ln786_3_fu_529_p2;
    sc_signal< sc_lv<1> > xor_ln340_3_fu_543_p2;
    sc_signal< sc_lv<1> > xor_ln786_4_fu_553_p2;
    sc_signal< sc_lv<1> > xor_ln340_4_fu_567_p2;
    sc_signal< sc_lv<1> > xor_ln340_5_fu_467_p2;
    sc_signal< sc_lv<1> > and_ln786_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln340_fu_476_p2;
    sc_signal< sc_lv<10> > select_ln340_fu_577_p3;
    sc_signal< sc_lv<10> > select_ln388_fu_584_p3;
    sc_signal< sc_lv<10> > y_V_fu_591_p3;
    sc_signal< sc_lv<1> > xor_ln340_6_fu_491_p2;
    sc_signal< sc_lv<1> > and_ln786_1_fu_486_p2;
    sc_signal< sc_lv<1> > or_ln340_1_fu_500_p2;
    sc_signal< sc_lv<10> > select_ln340_2_fu_604_p3;
    sc_signal< sc_lv<10> > select_ln388_1_fu_611_p3;
    sc_signal< sc_lv<10> > y_V_1_fu_618_p3;
    sc_signal< sc_lv<1> > xor_ln340_7_fu_515_p2;
    sc_signal< sc_lv<1> > and_ln786_2_fu_510_p2;
    sc_signal< sc_lv<1> > or_ln340_2_fu_524_p2;
    sc_signal< sc_lv<10> > select_ln340_4_fu_631_p3;
    sc_signal< sc_lv<10> > select_ln388_2_fu_638_p3;
    sc_signal< sc_lv<10> > y_V_2_fu_645_p3;
    sc_signal< sc_lv<1> > xor_ln340_8_fu_539_p2;
    sc_signal< sc_lv<1> > and_ln786_3_fu_534_p2;
    sc_signal< sc_lv<1> > or_ln340_3_fu_548_p2;
    sc_signal< sc_lv<10> > select_ln340_6_fu_658_p3;
    sc_signal< sc_lv<10> > select_ln388_3_fu_665_p3;
    sc_signal< sc_lv<10> > y_V_3_fu_672_p3;
    sc_signal< sc_lv<1> > xor_ln340_9_fu_563_p2;
    sc_signal< sc_lv<1> > and_ln786_4_fu_558_p2;
    sc_signal< sc_lv<1> > or_ln340_4_fu_572_p2;
    sc_signal< sc_lv<10> > select_ln340_8_fu_685_p3;
    sc_signal< sc_lv<10> > select_ln388_4_fu_692_p3;
    sc_signal< sc_lv<18> > p_Val2_6_fu_711_p1;
    sc_signal< sc_lv<18> > p_Val2_7_fu_715_p1;
    sc_signal< sc_lv<18> > p_Val2_8_fu_719_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_725_p3;
    sc_signal< sc_lv<18> > p_Val2_9_fu_741_p1;
    sc_signal< sc_lv<18> > p_Val2_10_fu_745_p1;
    sc_signal< sc_lv<18> > p_Val2_11_fu_749_p2;
    sc_signal< sc_lv<1> > p_Result_14_fu_755_p3;
    sc_signal< sc_lv<18> > p_Val2_12_fu_733_p3;
    sc_signal< sc_lv<18> > p_Val2_13_fu_763_p3;
    sc_signal< sc_lv<19> > rhs_V_fu_775_p1;
    sc_signal< sc_lv<19> > lhs_V_fu_771_p1;
    sc_signal< sc_lv<19> > ret_V_fu_779_p2;
    sc_signal< sc_lv<18> > p_Val2_15_fu_793_p2;
    sc_signal< sc_lv<1> > p_Result_16_fu_799_p3;
    sc_signal< sc_lv<1> > p_Result_15_fu_785_p3;
    sc_signal< sc_lv<1> > xor_ln786_5_fu_807_p2;
    sc_signal< sc_lv<1> > xor_ln340_11_fu_825_p2;
    sc_signal< sc_lv<1> > xor_ln340_10_fu_819_p2;
    sc_signal< sc_lv<1> > underflow_fu_813_p2;
    sc_signal< sc_lv<1> > or_ln340_5_fu_831_p2;
    sc_signal< sc_lv<18> > select_ln340_12_fu_837_p3;
    sc_signal< sc_lv<18> > select_ln388_5_fu_845_p3;
    sc_signal< sc_lv<19> > lhs_V_1_fu_865_p1;
    sc_signal< sc_lv<19> > rhs_V_1_fu_868_p1;
    sc_signal< sc_lv<19> > ret_V_1_fu_872_p2;
    sc_signal< sc_lv<18> > p_Val2_17_fu_861_p1;
    sc_signal< sc_lv<18> > p_Val2_19_fu_886_p2;
    sc_signal< sc_lv<1> > p_Result_18_fu_891_p3;
    sc_signal< sc_lv<1> > p_Result_17_fu_878_p3;
    sc_signal< sc_lv<1> > xor_ln786_6_fu_899_p2;
    sc_signal< sc_lv<1> > xor_ln340_13_fu_917_p2;
    sc_signal< sc_lv<1> > xor_ln340_12_fu_911_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_929_p4;
    sc_signal< sc_lv<1> > underflow_1_fu_905_p2;
    sc_signal< sc_lv<1> > or_ln340_6_fu_923_p2;
    sc_signal< sc_lv<10> > select_ln340_14_fu_939_p3;
    sc_signal< sc_lv<10> > select_ln388_6_fu_947_p3;
    sc_signal< sc_lv<10> > y_V_5_fu_955_p3;
    sc_signal< sc_lv<26> > mul_ln1118_fu_1037_p2;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_1044_p2;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_1051_p2;
    sc_signal< sc_lv<26> > mul_ln1118_3_fu_1058_p2;
    sc_signal< sc_lv<26> > mul_ln1118_4_fu_1065_p2;
    sc_signal< sc_lv<18> > mul_ln1118_fu_1037_p0;
    sc_signal< sc_lv<26> > sext_ln1116_fu_968_p1;
    sc_signal< sc_lv<17> > mul_ln1118_fu_1037_p1;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_1044_p0;
    sc_signal< sc_lv<17> > mul_ln1118_1_fu_1044_p1;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_1051_p0;
    sc_signal< sc_lv<17> > mul_ln1118_2_fu_1051_p1;
    sc_signal< sc_lv<18> > mul_ln1118_3_fu_1058_p0;
    sc_signal< sc_lv<17> > mul_ln1118_3_fu_1058_p1;
    sc_signal< sc_lv<18> > mul_ln1118_4_fu_1065_p0;
    sc_signal< sc_lv<17> > mul_ln1118_4_fu_1065_p1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to3;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<26> > mul_ln1118_1_fu_1044_p10;
    sc_signal< sc_lv<26> > mul_ln1118_2_fu_1051_p10;
    sc_signal< sc_lv<26> > mul_ln1118_3_fu_1058_p10;
    sc_signal< sc_lv<26> > mul_ln1118_4_fu_1065_p10;
    sc_signal< sc_lv<26> > mul_ln1118_fu_1037_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_1FF;
    static const sc_lv<10> ap_const_lv10_200;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<18> ap_const_lv18_1FFFF;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<18> ap_const_lv18_20000;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln786_1_fu_486_p2();
    void thread_and_ln786_2_fu_510_p2();
    void thread_and_ln786_3_fu_534_p2();
    void thread_and_ln786_4_fu_558_p2();
    void thread_and_ln786_fu_462_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to3();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_exp_table1_address0();
    void thread_exp_table1_address1();
    void thread_exp_table1_address2();
    void thread_exp_table1_address3();
    void thread_exp_table1_address4();
    void thread_exp_table1_ce0();
    void thread_exp_table1_ce1();
    void thread_exp_table1_ce2();
    void thread_exp_table1_ce3();
    void thread_exp_table1_ce4();
    void thread_icmp_ln1496_1_fu_231_p0();
    void thread_icmp_ln1496_1_fu_231_p1();
    void thread_icmp_ln1496_1_fu_231_p2();
    void thread_icmp_ln1496_2_fu_245_p2();
    void thread_icmp_ln1496_3_fu_259_p1();
    void thread_icmp_ln1496_3_fu_259_p2();
    void thread_icmp_ln1496_fu_217_p0();
    void thread_icmp_ln1496_fu_217_p1();
    void thread_icmp_ln1496_fu_217_p2();
    void thread_invert_table2_address0();
    void thread_invert_table2_ce0();
    void thread_lhs_V_1_fu_865_p1();
    void thread_lhs_V_fu_771_p1();
    void thread_mul_ln1118_1_fu_1044_p0();
    void thread_mul_ln1118_1_fu_1044_p1();
    void thread_mul_ln1118_1_fu_1044_p10();
    void thread_mul_ln1118_2_fu_1051_p0();
    void thread_mul_ln1118_2_fu_1051_p1();
    void thread_mul_ln1118_2_fu_1051_p10();
    void thread_mul_ln1118_3_fu_1058_p0();
    void thread_mul_ln1118_3_fu_1058_p1();
    void thread_mul_ln1118_3_fu_1058_p10();
    void thread_mul_ln1118_4_fu_1065_p0();
    void thread_mul_ln1118_4_fu_1065_p1();
    void thread_mul_ln1118_4_fu_1065_p10();
    void thread_mul_ln1118_fu_1037_p0();
    void thread_mul_ln1118_fu_1037_p1();
    void thread_mul_ln1118_fu_1037_p10();
    void thread_or_ln340_1_fu_500_p2();
    void thread_or_ln340_2_fu_524_p2();
    void thread_or_ln340_3_fu_548_p2();
    void thread_or_ln340_4_fu_572_p2();
    void thread_or_ln340_5_fu_831_p2();
    void thread_or_ln340_6_fu_923_p2();
    void thread_or_ln340_fu_476_p2();
    void thread_p_Result_14_fu_755_p3();
    void thread_p_Result_15_fu_785_p3();
    void thread_p_Result_16_fu_799_p3();
    void thread_p_Result_17_fu_878_p3();
    void thread_p_Result_18_fu_891_p3();
    void thread_p_Result_s_fu_725_p3();
    void thread_p_Val2_10_fu_745_p1();
    void thread_p_Val2_11_fu_749_p2();
    void thread_p_Val2_12_fu_733_p3();
    void thread_p_Val2_13_fu_763_p3();
    void thread_p_Val2_15_fu_793_p2();
    void thread_p_Val2_16_fu_853_p3();
    void thread_p_Val2_17_fu_861_p1();
    void thread_p_Val2_19_fu_886_p2();
    void thread_p_Val2_6_fu_711_p1();
    void thread_p_Val2_7_fu_715_p1();
    void thread_p_Val2_8_fu_719_p2();
    void thread_p_Val2_9_fu_741_p1();
    void thread_res_0_V();
    void thread_res_0_V_ap_vld();
    void thread_res_1_V();
    void thread_res_1_V_ap_vld();
    void thread_res_2_V();
    void thread_res_2_V_ap_vld();
    void thread_res_3_V();
    void thread_res_3_V_ap_vld();
    void thread_res_4_V();
    void thread_res_4_V_ap_vld();
    void thread_ret_V_1_fu_872_p2();
    void thread_ret_V_fu_779_p2();
    void thread_rhs_V_1_fu_868_p1();
    void thread_rhs_V_fu_775_p1();
    void thread_select_ln340_12_fu_837_p3();
    void thread_select_ln340_14_fu_939_p3();
    void thread_select_ln340_2_fu_604_p3();
    void thread_select_ln340_4_fu_631_p3();
    void thread_select_ln340_6_fu_658_p3();
    void thread_select_ln340_8_fu_685_p3();
    void thread_select_ln340_fu_577_p3();
    void thread_select_ln388_1_fu_611_p3();
    void thread_select_ln388_2_fu_638_p3();
    void thread_select_ln388_3_fu_665_p3();
    void thread_select_ln388_4_fu_692_p3();
    void thread_select_ln388_5_fu_845_p3();
    void thread_select_ln388_6_fu_947_p3();
    void thread_select_ln388_fu_584_p3();
    void thread_select_ln65_1_fu_237_p1();
    void thread_select_ln65_1_fu_237_p2();
    void thread_select_ln65_1_fu_237_p3();
    void thread_select_ln65_2_fu_251_p3();
    void thread_select_ln65_fu_223_p1();
    void thread_select_ln65_fu_223_p2();
    void thread_select_ln65_fu_223_p3();
    void thread_sext_ln1116_fu_968_p1();
    void thread_sext_ln703_1_fu_277_p1();
    void thread_sext_ln703_2_fu_303_p0();
    void thread_sext_ln703_2_fu_303_p1();
    void thread_sext_ln703_3_fu_329_p0();
    void thread_sext_ln703_3_fu_329_p1();
    void thread_sext_ln703_4_fu_355_p0();
    void thread_sext_ln703_4_fu_355_p1();
    void thread_sext_ln703_5_fu_381_p0();
    void thread_sext_ln703_5_fu_381_p1();
    void thread_sext_ln703_fu_273_p0();
    void thread_sext_ln703_fu_273_p1();
    void thread_sub_ln1193_1_fu_307_p2();
    void thread_sub_ln1193_2_fu_333_p2();
    void thread_sub_ln1193_3_fu_359_p2();
    void thread_sub_ln1193_4_fu_385_p2();
    void thread_sub_ln1193_fu_281_p2();
    void thread_tmp_s_fu_929_p4();
    void thread_underflow_1_fu_905_p2();
    void thread_underflow_fu_813_p2();
    void thread_x_max_V_fu_265_p1();
    void thread_x_max_V_fu_265_p3();
    void thread_xor_ln340_10_fu_819_p2();
    void thread_xor_ln340_11_fu_825_p2();
    void thread_xor_ln340_12_fu_911_p2();
    void thread_xor_ln340_13_fu_917_p2();
    void thread_xor_ln340_1_fu_495_p2();
    void thread_xor_ln340_2_fu_519_p2();
    void thread_xor_ln340_3_fu_543_p2();
    void thread_xor_ln340_4_fu_567_p2();
    void thread_xor_ln340_5_fu_467_p2();
    void thread_xor_ln340_6_fu_491_p2();
    void thread_xor_ln340_7_fu_515_p2();
    void thread_xor_ln340_8_fu_539_p2();
    void thread_xor_ln340_9_fu_563_p2();
    void thread_xor_ln340_fu_471_p2();
    void thread_xor_ln786_1_fu_481_p2();
    void thread_xor_ln786_2_fu_505_p2();
    void thread_xor_ln786_3_fu_529_p2();
    void thread_xor_ln786_4_fu_553_p2();
    void thread_xor_ln786_5_fu_807_p2();
    void thread_xor_ln786_6_fu_899_p2();
    void thread_xor_ln786_fu_457_p2();
    void thread_y_V_1_fu_618_p3();
    void thread_y_V_2_fu_645_p3();
    void thread_y_V_3_fu_672_p3();
    void thread_y_V_4_fu_699_p3();
    void thread_y_V_5_fu_955_p3();
    void thread_y_V_fu_591_p3();
    void thread_zext_ln255_1_fu_626_p1();
    void thread_zext_ln255_2_fu_653_p1();
    void thread_zext_ln255_3_fu_680_p1();
    void thread_zext_ln255_4_fu_707_p1();
    void thread_zext_ln255_fu_599_p1();
    void thread_zext_ln265_fu_963_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
